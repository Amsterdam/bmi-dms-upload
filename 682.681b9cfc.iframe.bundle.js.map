{"version":3,"file":"682.681b9cfc.iframe.bundle.js","mappings":";;;;;;;;AAgBA;;AAEA;AAEA;;AAGA;;AAqMA;AA7DA;;;;;;;;;;AAUA;AACA;;;;AAKA;;AAEA;AAvJA;;AAKA;AACA;AACA;;;;AAIA;;AAGA;;AAGA;AACA;AACA;;;;AAIA;;;AAGA;;AAGA;;AAEA;AACA;;;AAIA;;AAGA;AACA;;;;AAIA;;AAGA;;AAGA;AACA;AACA;AACA;;;AAGA;;AAGA;;;;;;AAOA;;AAEA;;;AAGA;;;AAGA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAGA;AAEA;AACA;;AAEA;;AAGA;AAEA;AACA;;AAEA;AACA;;AAEA;;AAGA;AAGA;AAGA;AAEA;;;AAGA;AAEA;;;;AAIA;AAGA;AAEA;;;AAIA;AC1JA;;;;;;;;ADkLA;;;;;;AAOA;;;;;AAKA;;;;AAIA;;;;;;;AAOA;AACA;AACA;;AAEA;AAEA;AACA;;;AAGA;;;;AErNA;;;;;;;;;ACeA;;;;;;;;;;AAUA;;;AAGA;AAEA;AACA;AACA;;AAGA;;;;;;;;AAQA;AACA;;;AAIA;;AAIA;;AAEA;;;;;;AAMA;AAIA;;;;;;AC7DA;;;AAGA;ACNA;ACIA;AACA;;;AAGA;;;;;;;;;;;;AAaA;;ACdA;AACA;;AAKA;;;AAGA;;AAGA;;AAEA;AAEA;;AAEA;AAEA;;AC3BA;;;;;;ACSA;AACA;ACVA;ACWA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AAEA;;;AAGA;;;AAGA;AACA;AACA;;;;AAIA;AAEA;;AC/BA;;AAEA;AACA;AACA;;AAIA;;;AAGA;;;AAIA;AAEA;AACA;;;;AAIA;;;AAKA;AAKA;;;AAKA;;AAIA;;;AAIA;;;AC5CA;AACA;AACA;AACA;;ACTA;ACOA;AAEA;;;AAOA;;AAIA;;;;AAIA;AAEA;;;AAGA;;;;ACvBA;;;;AAIA;;ACNA;ADSA;;AAGA;;;;AAIA;AAEA;;AAMA;AAFA;AE1BA;;ACMA;;AAGA;;AAEA;;;AAIA;ACqCA;AACA;AACA;AACA;AACA;AACA;AAIA;AAUA;AACA;AAEA;AACA;;AAGA;AACA;;;;;;;;;AAgDA;;;;;;AAQA;;;AAGA;;AASA;;;;AAIA;;;;AAIA;;AAGA;AAEA;AAEA;AACA;AACA;AChHA;AACA;AACA;AACA;AACA;AACA;AA0CA;;;;;;;;;AA4BA;;;;;;AAQA;;;AAGA;;AASA;;;;AAIA;;;;AAIA;;AAGA;AAEA;AAEA;AACA;AACA;;;AC/JA;AACA;AACA;;AAGA;;AAGA;AACA;AAEA;;AAEA;;AAGA;AACA;;;;AAIA;AAEA;;;;;AAKA;AAEA;AACA;ACpCA;ACWA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AAEA;;;AAGA;;;AAGA;AACA;AACA;;;;AAIA;AChCA;;;;;;;;;;;ACYA;AACA;;;;;ACfA;;;ACMA;;ACLA;;;ACEA;;;;;;;ACDA;;AAKA;AACA;;AVqDA;AAUA;AACA;AAEA;AACA;;AAGA;AACA;;;AU/DA;;AAGA;;AAEA;AAEA;;AAEA;AAEA;;AC3BA;;;;;;ACSA;AACA;ACNA;;;;;AAKA;AACA;;AAEA;;;;AAIA;;;;AAKA;ACjBA;;;;;;;;;;;AAWA;;;;AdqMA;AAEA;AAIA;AezNA;;ACKA;AACA;AACA;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;ACaA;;AAEA;AACA;;AAEA;AACA;AACA;;AC7BA;;;;;;;AAWA;;AAEA;AAEA;;AAGA;;AAuIA;AACA;;;;;;;;;;AAUA;AACA;;;;AAKA;;AAEA;AAvJA;;AAKA;AACA;AACA;;;;AAIA;;AAGA;;AAGA;AACA;AACA;;;;AAIA;;;AAGA;;AAGA;;AAEA;AACA;;;AAIA;;AAGA;AACA;;;;AAIA;;AAGA;;AAGA;AACA;AACA;AACA;;;AAGA;;AAGA;;;;;;AAOA;;AAEA;;;AAGA;;;AAGA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAGA;AAEA;AACA;;AAEA;;AAGA;AAEA;AACA;;AAEA;AACA;;AAEA;;AAGA;AAGA;AAGA;AAEA;;;AAGA;AAEA;;;;AAIA;AAGA;AAEA;;;AAIA;AAuBA;AACA;;;;;;AAOA;;;;;AAKA;;;;AAIA;;;;;;;AAOA;AACA;AACA;;AAEA;AAEA;AACA;;;AAGA;;;;AAOA;;ACxNA;AACA;;AAEA;AACA;;ACJA;;;;ACFA;;ACEA;AACA;AACA;;AAGA;AACA;;AAGA;AACA;;AAGA;;AAGA;;ACjBA;;ACIA;;;;;;ACGA;;;;AAKA;AACA;;;AAGA;;;;AAIA;AAEA;;;;;;;;;;AAYA;AACA;AAEA;AACA;;AAEA;;;AAIA;AACA;AAEA;AACA;ACnDA;;ACMA;;AAGA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;;;AAGA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;;;;AAKA;;;;;;;;;;AAUA;;;ACtFA;;;ACLA;;;;AAIA;;ACNA;ADSA;;AAGA;;;;AAIA;AAEA;;AAMA;AAFA;AE1BA;;;;;;;;;ACcA;;AAEA;;;;AAKA;;ACQA;;;;;ACfA;;;AAGA;AACA;AACA;;;;AAKA;;;;;;AAMA;;AAEA;;AAGA;;;;AAIA;;;;;AAMA;;;;AAIA;AACA;;AChDA;;;;;;AAOA;;;;AAIA;AACA;;AAEA;;;;;AAMA;AACA;AAEA;;AAGA;;AAEA;AAEA;;AAGA;;AAGA;;;;AAIA;;;;;;;AAOA;AACA;;;;AAIA;;;;AAIA;AACA;;;AC3BA;;;;;;;;;ACjBA;;;;;;;;;;AAUA;;;AAGA;AAEA;AACA;AACA;;AAGA;;;;;;;;AAQA;AACA;;;AAIA;;AAIA;;AAEA;;;;;;AAMA;AAIA;;;;;AC7DA;;AAEA;;AAEA;AACA;AACA;;AAIA;;;AAGA;;;AAIA;AAEA;AACA;;;;AAIA;;;AAKA;AAKA;;;AAKA;;AAIA;;;AAIA;;;;;;;ACjCA;;ACjBA;;;;;;;;;;ACiCA;;;;;;;;AASA;;;;;;;;;;;;AAaA;;;;AAuBA;;;AAGA;AACA;AACA;;;AAGA;AACA;;;AAGA;;;;;;;;;AASA;;AAEA;AACA;AACA;;;AAGA;;;;;AAKA;;AAEA;;;;AAIA;ACtBA;AAMA;AAiBA;AC1GA;AACA;AACA","sources":["webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/Button/ButtonStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/shared/ie-fixes.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/Button/Button.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/Checkbox/CheckboxStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/ErrorMessage/ErrorMessageStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/ErrorMessage/ErrorMessage.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/GlobalStyle/GlobalStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/Typography/TypographyStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/Typography/Typography.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/Heading/HeadingStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/Heading/Heading.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/Icon/IconStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/Label/LabelStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/Tag/TagStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/Tag/Tag.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/FormLabelStyle/FormLabelStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/Input/InputStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/shared/constants.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/Input/Input.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/components/TextField/TextFieldStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/asc-ui/es/utils/themeUtils.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/utils/themeUtils.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/common/src/DescriptionList/DescriptionListStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/common/src/DescriptionList/DescriptionList.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/Icon/IconStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/Icon/Icon.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/Spinner/SpinnerStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/Spinner/Spinner.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/common/src/DocumentViewer/DocumentViewerStyles.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/common/src/DocumentViewer/Renderer/PDFRendererStyles.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/common/src/DocumentViewer/Renderer/DownloadRenderer.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/Typography/TypographyStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/Typography/Typography.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/Heading/HeadingStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/TopBar/TopBarStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/Modal/ModalStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/types/KeyboardKeys.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/BackDrop/BackDropStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/common/src/Modal/ModalStyles.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/Button/ButtonStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/common/src/Modal/ModalTopBar/ModalTopBarStyles.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/common/src/Modal/ModalTopBar/ModalTopBar.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/common/src/Modal/ModalContent/ModalContent.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/common/src/Modal/ModalActions/ModalActionsStyles.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/common/src/Modal/ModalActions/ModalActions.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/common/src/ConfirmDialog/ConfirmDialog.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/Pagination/PaginationStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/Pagination/Pagination.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/common/src/DocumentTable/DocumentTableStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/utils/hooks/useActionOnEscape.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/Input/InputStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/shared/constants.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/Input/Input.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/common/src/DocumentTable/ColumnFilterStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/common/src/DocumentTable/ColumnFilter.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/form/FileUpload/FileUploadStyles.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/form/FileUpload/FileList/FileListStyles.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/form/FileUpload/FileUpload.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/Checkbox/CheckboxStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/node_modules/@amsterdam/asc-ui/es/components/Label/LabelStyle.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/form/Select/SelectStyles.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@amsterdam/bmi-component-library/es/form/CreatableSelect/CreatableSelect.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/@mui/material/esm/ButtonBase/TouchRipple.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/ajv/dist/compile/validate/dataType.js","webpack://@amsterdam/bmi-dms-upload/./node_modules/ajv/dist/vocabularies/applicator/dependencies.js"],"sourcesContent":["import { darken, readableColor, size, transitions } from 'polished';\r\nimport styled, { css } from 'styled-components';\r\nimport { svgFill, themeColor, themeSpacing } from '../../utils';\r\nimport Icon from '../Icon';\r\nimport { flexboxMinHeightFix } from '../shared/ie-fixes';\r\nconst defaultProps = {\r\n    size: 30,\r\n};\r\nexport const getButtonHeight = (theme) => themeSpacing(11)({ theme });\r\nexport const ArrowRight = styled.div `\n  position: relative;\n  top: 0;\n  right: -15px;\n  width: 0;\n  height: 0;\n  border: 22px solid rgba(255, 255, 255, 0);\n  border-left: 15px solid ${themeColor('secondary')};\n  border-right: 0;\n  ${transitions('border-color', '0.1s ease-in-out')}\n`;\r\nexport const IconLeft = styled(Icon) `\n  margin-right: 10px;\n`;\r\nexport const IconRight = styled(Icon) `\n  margin-left: 10px;\n`;\r\nconst getVariant = () => ({ theme, variant, color, }) => {\r\n    switch (variant) {\r\n        case 'primary':\r\n            return css `\n          min-width: 90px;\n          background-color: ${themeColor('primary')};\n          color: ${readableColor(themeColor('primary')({ theme }))};\n          ${svgFill(themeColor('tint', 'level1'))};\n\n          &:focus,\n          &:hover {\n            background-color: ${darken(0.1, themeColor('primary')({ theme }))};\n          }\n        `;\r\n        case 'secondary':\r\n            return css `\n          min-width: 90px;\n          background-color: ${themeColor('secondary')};\n          color: ${themeColor('tint', 'level1')};\n          ${svgFill(themeColor('tint', 'level1'))};\n\n          &:focus,\n          &:hover {\n            background-color: ${darken(0.1, themeColor('secondary')({ theme }))};\n          }\n\n          ${(taskflow) => taskflow &&\r\n                css `\n              &:not(:disabled)&:focus\n                ${ArrowRight},\n                &:not(:disabled)&:hover\n                ${ArrowRight} {\n                border-left-color: ${darken(0.1, themeColor('secondary')({ theme }))};\n              }\n            `}\n        `;\r\n        case 'tertiary':\r\n            return css `\n          min-width: 90px;\n          background-color: ${themeColor('tint', 'level4')};\n          ${svgFill(themeColor('tint', 'level7'))};\n\n          &:focus,\n          &:hover {\n            background-color: ${darken(0.1, themeColor('tint', 'level4')({ theme }))};\n          }\n        `;\r\n        case 'primaryInverted':\r\n            return css `\n          min-width: 90px;\n          color: ${themeColor('primary')};\n          border: 1px solid ${themeColor('primary')};\n          background-color: ${themeColor('tint', 'level1')};\n          ${svgFill(themeColor('primary', 'main'))};\n\n          &:hover {\n            outline: 1px solid ${themeColor('primary')};\n          }\n        `;\r\n        case 'textButton':\r\n            return css `\n          height: auto;\n          padding: 0;\n          align-self: baseline;\n          white-space: normal;\n          text-align: left;\n          color: ${themeColor('primary')};\n          background-color: rgba(0, 0, 0, 0);\n          ${svgFill(themeColor('primary', 'main'))};\n\n          /* remove transition because it's async with Icon */\n          ${transitions('color', '0s')}\n\n          &:hover {\n            color: ${themeColor('secondary')};\n            ${svgFill(themeColor('secondary', 'main'))};\n          }\n\n          ${IconLeft} {\n            margin-right: ${themeSpacing(1)};\n          }\n          ${IconRight} {\n            margin-left: ${themeSpacing(1)};\n          }\n        `;\r\n        case 'blank':\r\n            return css `\n          background-color: ${themeColor('tint', 'level1')};\n          ${svgFill(themeColor('tint', 'level7'))};\n          &:hover {\n            background-color: ${themeColor('tint', 'level3')};\n          }\n        `;\r\n        case 'application':\r\n            return css `\n          border: 1px solid ${themeColor('tint', 'level7')};\n          background-color: ${themeColor('tint', 'level1')};\n          height: 32px;\n          padding: ${themeSpacing(1, 2)};\n          ${svgFill(themeColor('tint', 'level7'))};\n          &:hover {\n            background-color: ${themeColor('tint', 'level4')};\n          }\n        `;\r\n        default:\r\n            // About-to-be-deprecated codeblock to support the 'color' prop\r\n            return css `\n          color: ${color\r\n                ? readableColor(themeColor(color)({ theme }))\r\n                : themeColor('primary')({ theme })};\n          ${color &&\r\n                css `\n            background: ${themeColor(color)};\n          `}\n\n          ${!color &&\r\n                css `\n            border: 1px solid ${themeColor('primary')};\n          `}\n\n        &:hover {\n            background: ${color\r\n                ? themeColor(color, 'dark')({ theme })\r\n                : themeColor('tint', 'level3')({ theme })};\n            ${!color &&\r\n                css `\n              outline: 1px solid ${themeColor('primary')};\n            `}\n          }\n        `;\r\n    }\r\n};\r\nconst ButtonStyle = styled.button `\n  height: ${({ theme }) => getButtonHeight(theme)};\n  white-space: nowrap;\n  display: inline-flex;\n  align-items: center;\n  text-decoration: none;\n  border: none;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 20px;\n  padding: ${({ size: sizeProp, theme }) => sizeProp ? '0' : themeSpacing(3, 4)({ theme })};\n  ${({ size: sizeProp, square }) => (sizeProp || square) && // make the button square\r\n    css `\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      ${size(sizeProp || defaultProps.size)}// width and height\n    `}\n  ${transitions(['color', 'background-color'], '0.1s ease-in-out')}\n  ${getVariant()}\n  ${flexboxMinHeightFix()} // ie fix\n  ${({ taskflow }) => taskflow &&\r\n    css `\n      position: relative;\n      min-width: initial;\n      padding-right: 0;\n      padding-top: 0; // safari fix\n      padding-bottom: 0; // safari fix\n      line-height: ${({ theme }) => getButtonHeight(theme)}; // safari 10.1 fix\n      z-index: 0;\n      && {\n        margin-right: 25px;\n      }\n      &:focus ${ArrowRight}:after {\n        opacity: 1;\n      }\n    `}\n  ${Icon} {\n    flex-shrink: 0;\n  }\n  &:disabled {\n    cursor: default;\n    outline: none;\n    border: none;\n    color: ${themeColor('tint', 'level4')};\n    background-color: ${themeColor('tint', 'level3')};\n    ${svgFill(themeColor('tint', 'level4'))};\n    text-decoration: none;\n    ${({ taskflow }) => taskflow &&\r\n    css `\n        ${ArrowRight} {\n          border-left-color: ${themeColor('tint', 'level3')};\n        }\n      `}\n    ${({ variant }) => variant &&\r\n    variant === 'textButton' &&\r\n    css `\n        background-color: rgba(0, 0, 0, 0);\n      `}\n  }\n`;\r\nexport default ButtonStyle;\r\n//# sourceMappingURL=ButtonStyle.js.map","/* eslint-disable import/prefer-default-export */\r\nimport { css } from 'styled-components';\r\nexport const flexboxMinHeightFix = () => css `\n  &::after {\n    content: '';\n    display: block;\n    min-height: inherit;\n    font-size: 0;\n  }\n`;\r\n//# sourceMappingURL=ie-fixes.js.map","var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { forwardRef } from 'react';\r\nimport Icon, { defaultProps as iconDefaultProps } from '../Icon/Icon';\r\nimport ButtonStyle, { ArrowRight, IconLeft, IconRight, } from './ButtonStyle';\r\nconst Button = forwardRef((_a, ref) => {\r\n    var { children, iconLeft, iconRight, icon, iconSize, taskflow } = _a, otherProps = __rest(_a, [\"children\", \"iconLeft\", \"iconRight\", \"icon\", \"iconSize\", \"taskflow\"]);\r\n    const iconProps = {\r\n        size: iconSize || iconDefaultProps.size,\r\n    };\r\n    return (_jsxs(ButtonStyle, Object.assign({ ref: ref }, otherProps, { taskflow: taskflow }, { children: [iconLeft && _jsx(IconLeft, Object.assign({}, iconProps, { children: iconLeft })), icon ? _jsx(Icon, Object.assign({}, iconProps, { children: icon })) : children, iconRight && _jsx(IconRight, Object.assign({}, iconProps, { children: iconRight })), taskflow && _jsx(ArrowRight, {})] })));\r\n});\r\nexport default Button;\r\n//# sourceMappingURL=Button.js.map","import styled, { css } from 'styled-components';\r\nimport { svgFill, themeColor } from '../../utils';\r\nimport { IconStyle } from '../Icon';\r\nexport default styled.input.attrs({\r\n    type: 'checkbox',\r\n}) `\n  cursor: inherit;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  left: 6px;\n  top: 6px;\n`;\r\nconst CheckboxIconStyle = styled(IconStyle) `\n  display: flex;\n  border-width: 1px;\n  border-style: solid;\n  width: 22px;\n  height: 22px;\n  position: relative;\n  justify-content: center;\n  align-items: center;\n  z-index: 1;\n  background-color: ${themeColor('tint', 'level1')};\n  transition: background-color 0.2s ease-in-out;\n  pointer-events: none;\n  ${({ checked, indeterminate }) => (checked || indeterminate) &&\r\n    css `\n      color: ${themeColor('tint', 'level7')};\n      background-color: ${themeColor('tint', 'level7')};\n      ${svgFill(themeColor('tint', 'level1'))};\n    `};\n`;\r\nconst CheckboxWrapperStyle = styled.span `\n  position: relative;\n  display: inline-flex;\n  user-select: none;\n  vertical-align: middle;\n  margin-bottom: 1px;\n  padding: 6px;\n  flex-shrink: 0; /* IE11 fix */\n  color: ${themeColor('tint', 'level5')};\n  ${({ disabled }) => disabled &&\r\n    css `\n      pointer-events: none;\n    `}\n  ${({ checked, disabled }) => !checked &&\r\n    !disabled && // IE11 fix. If an element is disabled, you can still hover on it on IE11.\r\n    css `\n      &:hover {\n        color: ${themeColor('tint', 'level7')};\n\n        ${CheckboxIconStyle} {\n          outline-style: solid;\n          outline-width: 1px;\n        }\n      }\n    `}\n    ${({ error, checked, disabled }) => error &&\r\n    !checked &&\r\n    !disabled &&\r\n    css `\n      ${CheckboxIconStyle} {\n        border-color: red;\n        outline: 1px solid red;\n      }\n    `}\n`;\r\nexport { CheckboxWrapperStyle, CheckboxIconStyle };\r\n//# sourceMappingURL=CheckboxStyle.js.map","import styled from 'styled-components';\r\nimport { themeColor, themeSpacing } from '../../utils';\r\nconst ErrorMessageStyle = styled.div `\n  color: ${themeColor('error', 'main')};\n  font-weight: 700;\n  line-height: 22px;\n  margin-top: ${themeSpacing(4)};\n`;\r\nexport default ErrorMessageStyle;\r\n//# sourceMappingURL=ErrorMessageStyle.js.map","var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport ErrorMessageStyle from './ErrorMessageStyle';\r\nfunction ErrorMessage(_a) {\r\n    var { message } = _a, otherProps = __rest(_a, [\"message\"]);\r\n    return (_jsx(ErrorMessageStyle, Object.assign({ role: \"alert\" }, otherProps, { children: message })));\r\n}\r\nexport default ErrorMessage;\r\n//# sourceMappingURL=ErrorMessage.js.map","import { normalize } from 'polished';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { getValueFromTheme } from '../../utils';\r\nconst GlobalStyle = createGlobalStyle `\n  ${normalize()}\n  ${({ theme }) => getValueFromTheme('globalStyle')({ theme })}\n\n  body {\n    font-family: ${getValueFromTheme('typography.fontFamily')};\n  }\n\n  /* Display reset for older browsers that don't support certain HTML5 elements */\n  article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n      display: block;\n  }\n  \n  /* Use border-box sizing by default for all elements */\n  *, *::before, *::after {\n    box-sizing: border-box;\n  } \n`;\r\nexport default GlobalStyle;\r\n//# sourceMappingURL=GlobalStyle.js.map","import styled, { css } from 'styled-components';\r\nimport { getTypographyFromTheme, themeColor } from '../../utils';\r\nexport const defaultTypographyStyles = {\r\n    em: css `\n    font-style: italic;\n  `,\r\n};\r\nexport default styled.p `\n  ${({ as, forwardedAs }) => {\r\n    const key = as !== null && as !== void 0 ? as : forwardedAs;\r\n    return typeof key === 'string' && defaultTypographyStyles[key];\r\n}}\n  margin: 0;\n  ${getTypographyFromTheme()};\n  font-stretch: normal;\n  letter-spacing: normal;\n  ${({ strong }) => strong &&\r\n    css `\n      font-weight: 700;\n      color: ${themeColor('tint', 'level7')};\n    `}\n  ${({ color }) => color &&\r\n    css `\n      color: ${themeColor(color)};\n    `}\n  ${({ fontSize }) => fontSize &&\r\n    css `\n      font-size: ${fontSize}px;\n    `}\n`;\r\n//# sourceMappingURL=TypographyStyle.js.map","var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport TypographyStyle from './TypographyStyle';\r\nimport { deprecatedWarning } from '../../utils';\r\nfunction Typography(_a) {\r\n    var { children } = _a, otherProps = __rest(_a, [\"children\"]);\r\n    if (otherProps.color) {\r\n        deprecatedWarning('You are using the deprecated `color` prop in the `Typography` component. Please use your own custom style rules');\r\n    }\r\n    return _jsx(TypographyStyle, Object.assign({}, otherProps, { children: children }));\r\n}\r\nexport default Typography;\r\n//# sourceMappingURL=Typography.js.map","import styled, { css } from 'styled-components';\r\nimport Typography from '../Typography';\r\nexport const HeaderStyleCSS = css `\n  margin-top: 0;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\r\nexport default styled(Typography) `\n  ${HeaderStyleCSS}\n`;\r\n//# sourceMappingURL=HeadingStyle.js.map","var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport HeadingStyle from './HeadingStyle';\r\nfunction Heading(_a) {\r\n    var { children, as } = _a, otherProps = __rest(_a, [\"children\", \"as\"]);\r\n    return (_jsx(HeadingStyle, Object.assign({ forwardedAs: as }, otherProps, { children: children })));\r\n}\r\nHeading.defaultProps = {\r\n    as: 'h1',\r\n};\r\nexport default Heading;\r\n//# sourceMappingURL=Heading.js.map","import styled, { css } from 'styled-components';\r\nimport { svgFill } from '../../utils';\r\nexport const defaultProps = {\r\n    size: 20,\r\n    padding: 0,\r\n    rotate: 0,\r\n};\r\nconst IconStyle = styled.span.withConfig({\r\n    shouldForwardProp: (prop, defaultValidatorFn) => !['size', 'rotate', 'padding', 'inline', 'color'].includes(prop) &&\r\n        defaultValidatorFn(prop),\r\n}) `\n  display: ${({ inline }) => (inline ? 'inline-flex' : 'flex')};\n  ${({ iconUrl }) => iconUrl &&\r\n    css `\n      background-image: url(${iconUrl});\n    `}\n  ${({ size = defaultProps.size, padding = defaultProps.padding }) => css `\n    width: ${size - padding * 2}px;\n    height: ${size - padding * 2}px;\n  `}\n  ${({ padding }) => padding &&\r\n    css `\n      padding: ${padding}px;\n    `};\n  box-sizing: content-box;\n  ${({ rotate = defaultProps.rotate }) => `transform: rotate(${rotate}deg)`};\n\n  & > svg {\n    ${({ size = defaultProps.size, padding = defaultProps.padding }) => css `\n      width: ${size - padding * 2}px;\n      height: ${size - padding * 2}px;\n    `}\n  }\n\n  ${({ color }) => color && svgFill(color)};\n`;\r\nexport default IconStyle;\r\n//# sourceMappingURL=IconStyle.js.map","import styled, { css } from 'styled-components';\r\nimport { srOnlyStyle, themeColor } from '../../utils';\r\nimport { CheckboxWrapperStyle } from '../Checkbox';\r\nconst LabelStyle = styled.label `\n  display: inline-flex;\n  align-items: ${({ align }) => align};\n  vertical-align: middle;\n  color: ${themeColor('tint', 'level7')};\n  ${({ srOnly }) => srOnly && srOnlyStyle}\n  ${({ disabled }) => disabled\r\n    ? css `\n          opacity: 0.3;\n        `\r\n    : css `\n          cursor: pointer;\n        `}\n  ${({ position }) => (position === 'top' || position === 'bottom') &&\r\n    css `\n      flex-direction: column;\n    `}\n  ${({ position }) => position &&\r\n    css `\n      & ${CheckboxWrapperStyle} {\n        padding-${position}: 12px;\n      }\n    `}\n  \n  ${({ active }) => active &&\r\n    css `\n      font-weight: 700;\n    `}\n`;\r\nLabelStyle.defaultProps = {\r\n    position: 'right',\r\n    align: 'center',\r\n};\r\nexport const LabelTextStyle = styled.span `\n  ${({ position }) => position !== 'top' &&\r\n    position !== 'bottom' &&\r\n    css `\n      margin: 9.2px 0; /* To align the label to a checkbox / radiobutton when having a long text. line-height is 1.15 / 18.4px (from normalize css). Margin top & bottom = lineheight / 2 */\n    `}\n  ${({ position }) => position === 'top' || position === 'left'\r\n    ? css `\n          order: 0;\n        `\r\n    : css `\n          order: 1;\n        `}\n`;\r\nexport default LabelStyle;\r\n//# sourceMappingURL=LabelStyle.js.map","import styled, { css } from 'styled-components';\r\nimport { readableColor } from 'polished';\r\nimport { themeColor, themeSpacing } from '../../utils';\r\nexport default styled.span `\n  margin-top: 0;\n  display: inline-block;\n  padding: ${themeSpacing(1)};\n  ${({ theme, colorType, colorSubtype }) => css `\n    background-color: ${themeColor(colorType, colorSubtype)({ theme })};\n    color: ${readableColor(themeColor(colorType, colorSubtype)({ theme }))};\n  `}\n`;\r\n//# sourceMappingURL=TagStyle.js.map","var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport TagStyle from './TagStyle';\r\nfunction Tag(_a) {\r\n    var { children } = _a, otherProps = __rest(_a, [\"children\"]);\r\n    return _jsx(TagStyle, Object.assign({}, otherProps, { children: children }));\r\n}\r\nTag.defaultProps = {\r\n    colorType: 'primary',\r\n    colorSubtype: 'main',\r\n};\r\nexport default Tag;\r\n//# sourceMappingURL=Tag.js.map","import styled, { css } from 'styled-components';\r\nimport { getTypographyFromTheme, srOnlyStyle, themeColor, themeSpacing, } from '../../utils';\r\nconst FormLabelStyle = styled.label.attrs(({ htmlFor }) => {\r\n    return {\r\n        htmlFor,\r\n    };\r\n}) `\n  ${({ label }) => label &&\r\n    css `\n      ${({ theme }) => getTypographyFromTheme()({\r\n        as: 'p',\r\n        gutterBottom: 0,\r\n        theme,\r\n    })};\n    `}\n\n  ${({ srOnly, label, error }) => (label || error) && // Style if `label` or `errer` prop is set\r\n    !srOnly && // Don't style for screen reader\r\n    css `\n      display: block;\n      padding-bottom: ${themeSpacing(2)};\n      font-weight: 700;\n    `}\n\n  ${({ error }) => error &&\r\n    css `\n      color: ${themeColor('error', 'main')};\n    `}\n\n  ${({ srOnly }) => srOnly && srOnlyStyle}\n`;\r\nexport default FormLabelStyle;\r\n//# sourceMappingURL=FormLabelStyle.js.map","import styled, { css } from 'styled-components';\r\nimport { themeColor, themeSpacing } from '../../utils';\r\nimport { INPUT_SIZE } from '../shared/constants';\r\nexport const inputCss = css `\n  appearance: none;\n  font-size: 16px;\n  border: solid 1px ${themeColor('tint', 'level5')};\n  border-radius: 0;\n  box-sizing: border-box;\n  line-height: 18px;\n  padding: ${themeSpacing(2)};\n  width: 100%;\n  height: ${INPUT_SIZE}px;\n  ${({ error }) => !error &&\r\n    css `\n      &:hover {\n        border-color: ${themeColor('tint', 'level6')};\n      }\n    `}\n\n  ${({ error }) => error &&\r\n    css `\n      border-color: ${themeColor('secondary', 'main')};\n    `}\n`;\r\nconst InputStyle = styled.input `\n  ${inputCss}\n`;\r\nexport default InputStyle;\r\n//# sourceMappingURL=InputStyle.js.map","export const HEADER_HEIGHT_SMALL = 50;\r\nexport const HEADER_HEIGHT_TALL = 158;\r\nexport const BACKDROP_Z_INDEX = 20;\r\nexport const TOGGLE_BUTTON_SIZE = 50;\r\nexport const INPUT_SIZE = 44;\r\nexport const BUTTON_SIZE = INPUT_SIZE;\r\nexport const SEARCH_BAR_HEIGHT = 36;\r\nexport const weekDays = ['ma', 'di', 'woe', 'do', 'vrij', 'za', 'zo'];\r\nexport const months = [\r\n    'januari',\r\n    'februari',\r\n    'maart',\r\n    'april',\r\n    'mei',\r\n    'juni',\r\n    'juli',\r\n    'augustus',\r\n    'september',\r\n    'oktober',\r\n    'november',\r\n    'december',\r\n];\r\nexport const daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n//# sourceMappingURL=constants.js.map","var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport useActionOnEscape from '../../utils/hooks/useActionOnEscape';\r\nimport InputContext from './InputMethodsContext';\r\nimport InputStyle from './InputStyle';\r\nconst Input = forwardRef((_a, externalRef) => {\r\n    var { blurOnEscape, value, error } = _a, props = __rest(_a, [\"blurOnEscape\", \"value\", \"error\"]);\r\n    const { onKeyDown } = props;\r\n    const inputRef = useRef(null);\r\n    useImperativeHandle(externalRef, () => inputRef.current);\r\n    const { onKeyDown: onKeyDownHook } = useActionOnEscape(() => {\r\n        if (inputRef.current) {\r\n            inputRef.current.blur();\r\n        }\r\n    });\r\n    const handleOnKeyDown = (e, context) => {\r\n        if (onKeyDown) {\r\n            onKeyDown(e);\r\n        }\r\n        if (blurOnEscape) {\r\n            onKeyDownHook(e);\r\n        }\r\n        if (context.onKeyDown) {\r\n            context.onKeyDown(e);\r\n        }\r\n    };\r\n    return (_jsx(InputContext.Consumer, { children: (context) => {\r\n            if (context.setInputRef) {\r\n                context.setInputRef(inputRef);\r\n            }\r\n            return (_jsx(InputStyle, Object.assign({ ref: inputRef }, props, context, { onKeyDown: (e) => {\r\n                    handleOnKeyDown(e, context);\r\n                }, error: error, value: value })));\r\n        } }));\r\n});\r\nexport default Input;\r\n//# sourceMappingURL=Input.js.map","import styled from 'styled-components';\r\nimport Button from '../Button';\r\nimport { themeSpacing } from '../../utils';\r\nconst TextFieldStyle = styled.div `\n  position: relative;\n`;\r\nexport const InputWrapper = styled.div `\n  position: relative;\n`;\r\nexport const CloseButton = styled(Button) `\n  position: absolute;\n  right: ${themeSpacing(2)};\n  top: 50%;\n  transform: translateY(-50%);\n`;\r\nexport default TextFieldStyle;\r\n//# sourceMappingURL=TextFieldStyle.js.map","var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { css, keyframes } from 'styled-components';\r\nimport { BACKDROP_Z_INDEX } from '../components/shared/constants';\r\nimport { fromProps } from './fromProps';\r\n/**\r\n * Curry function to provide the theme as first parameter, followed up with other parameters\r\n * @param cb\r\n *\r\n * @example\r\n * const myThemeHelperFunction = withTheme((theme, ...otherParams) => {\r\n *   ...\r\n * })\r\n *\r\n * css`\r\n *  ${myThemeHelperFunction(param1, param2)}\r\n * `\r\n */\r\nexport const withTheme = (cb) => (...params) => ({ theme }) => cb(theme, ...params);\r\n/**\r\n * A shortcut to the `fromProps` that will get a value out of the props.theme object\r\n */\r\nexport const getValueFromTheme = withTheme((theme, identifier, callback) => fromProps(identifier, callback)(theme));\r\nexport const themeColor = withTheme(\r\n// eslint-disable-next-line default-param-last\r\n(theme, colorType, colorSubtype = 'main', override) => {\r\n    if (override) {\r\n        return override;\r\n    }\r\n    if (colorType) {\r\n        return getValueFromTheme(`colors.${[colorType]}.${[colorSubtype]}`)({\r\n            theme,\r\n        });\r\n    }\r\n    return getValueFromTheme('colors.tint.level1')({ theme });\r\n});\r\nexport const breakpoint = withTheme((theme, type, variant) => {\r\n    const breakpointFunc = getValueFromTheme(`breakpoints.${[variant]}`)({\r\n        theme,\r\n    });\r\n    return breakpointFunc && breakpointFunc(type);\r\n});\r\nconst generateCSSFromTypography = ({ color, fontWeight, fontSize, letterSpacing, lineHeight, marginBottom, }, gutterBottom) => css `\n  color: ${color};\n  font-weight: ${fontWeight};\n  font-size: ${fontSize};\n  letter-spacing: ${letterSpacing};\n  line-height: ${lineHeight};\n  margin-bottom: ${typeof gutterBottom === 'number'\r\n    ? `${gutterBottom}px`\r\n    : marginBottom};\n`;\r\nexport const getTypographyFromTheme = () => ({ as: asProp = 'p', gutterBottom, styleAs, theme }) => {\r\n    const as = styleAs || asProp;\r\n    const styles = getValueFromTheme(`typography.${[as]}`)({\r\n        theme,\r\n    });\r\n    if (!styles) {\r\n        return '';\r\n    }\r\n    const { breakpoints } = styles, otherProps = __rest(styles, [\"breakpoints\"]);\r\n    return css `\n      ${generateCSSFromTypography(otherProps, gutterBottom)}\n      ${() => breakpoints\r\n        ? Object.entries(breakpoints).map(([breakpointFromTypography, typoStyles]) => css `\n                @media screen and ${breakpoint('min-width', breakpointFromTypography)} {\n                  ${generateCSSFromTypography(typoStyles || {}, gutterBottom)}\n                }\n              `)\r\n        : ``}\n    `;\r\n};\r\nexport const getTypographyValueFromProperty = withTheme((theme, element, property, breakpointRule) => {\r\n    const rules = getValueFromTheme(`typography.${[element]}`)({ theme });\r\n    if (breakpointRule) {\r\n        if (rules.breakpoints[breakpointRule]) {\r\n            return rules.breakpoints[breakpointRule][property];\r\n        }\r\n        return '';\r\n    }\r\n    return rules[property];\r\n});\r\n/**\r\n * When this style is applied on an element it will be hidden but still readable by screen readers.\r\n *\r\n * For example:\r\n * ```ts\r\n * const OnlyVisibleForScreenReaders = styled.button`${srOnlyStyle}`\r\n * ```\r\n */\r\nexport const srOnlyStyle = css `\n  border-width: 0;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n`;\r\n/**\r\n * Fills the elements in an SVG with a color, useful for styling icons.\r\n *\r\n * For example, using a theme color:\r\n * ```jsx\r\n * const PrimaryCarIcon = styled(CarIcon)`\r\n *   ${svgFill(themeColor('primary'))}\r\n * `\r\n * ```\r\n *\r\n * Or by setting the color directly using any color valid in CSS, such as hexadecimal, rgba() and hsla().\r\n *\r\n * ```jsx\r\n * const RedCarIcon = styled(CarIcon)`\r\n *   ${svgFill('#FF0000')}\r\n * `\r\n * ```\r\n */\r\nexport const svgFill = withTheme((theme, color) => {\r\n    const fill = typeof color === 'function' ? color({ theme }) : color;\r\n    return css `\n    & svg {\n      circle,\n      rect,\n      polygon,\n      path {\n        fill: ${fill};\n      }\n    }\n  `;\r\n});\r\n/**\r\n * Adds an animated background to the element to indicate the content is loading.\r\n * @param animateLoading Allows toggling the animation effect, if false a fixed color will be used instead.\r\n */\r\nexport const perceivedLoading = withTheme((theme, animateLoading = true) => {\r\n    const animation = keyframes `\n      0% {\n        background-color: ${themeColor('tint', 'level3')({ theme })};\n      }\n\n      50% {\n        background-color: ${themeColor('tint', 'level4')({ theme })};\n      }\n\n      100% {\n        background-color: ${themeColor('tint', 'level3')({ theme })};\n      }\n    `;\r\n    return animateLoading\r\n        ? css `\n        animation: ${animation} 2s ease-in-out infinite;\n      `\r\n        : css `\n        background-color: ${themeColor('tint', 'level4')({ theme })};\n      `;\r\n});\r\n/**\r\n * @deprecated Only used in deprecated component GridItem\r\n * @param sizes\r\n * @param propertyName\r\n * @param theme\r\n */\r\nexport const mapToBreakpoints = (sizes, propertyName, theme) => {\r\n    const breakpointVariants = Object.keys(theme.breakpoints);\r\n    return css `\n    ${sizes\r\n        .map((value, index) => index === 0\r\n        ? `${propertyName}: ${value};`\r\n        : breakpointVariants[index] &&\r\n            `\n        @media screen and ${breakpoint('min-width', breakpointVariants[index])({\r\n                theme,\r\n            })} {\n          ${propertyName}: ${value};\n        }\n      `)\r\n        .join('')}\n  `;\r\n};\r\nexport const showHide = () => ({ hideAt, showAt, theme }) => {\r\n    const hideAtCss = hideAt\r\n        ? css `\n          @media screen and ${breakpoint('min-width', hideAt)({ theme })} {\n            display: none;\n          }\n        `\r\n        : '';\r\n    const showAtCss = showAt\r\n        ? css `\n          @media screen and ${breakpoint('max-width', showAt)({ theme })} {\n            display: none;\n          }\n        `\r\n        : '';\r\n    return css `\n      ${showAtCss}\n      ${hideAtCss}\n    `;\r\n};\r\n// Function that uses the BACKDROP_Z_INDEX constant to determine the z-index for components rendered with a backdrop\r\n// The first argument in the curry can be used to raise the z-index for components that need to be displayed above\r\n// the backdrop, but aren't directly related\r\nexport const showAboveBackDrop = (show) => ({ hasBackDrop, zIndexOffset, }) => hasBackDrop || show\r\n    ? css `\n          z-index: ${zIndexOffset\r\n        ? BACKDROP_Z_INDEX + zIndexOffset + 1\r\n        : BACKDROP_Z_INDEX + 1};\n        `\r\n    : '';\r\n/**\r\n * Retrieve an amount of pixels by passing a factor that will multiply it by the theme's spacing unit\r\n *\r\n * @example If the theme's spacing unit is 4px:\r\n * css`\r\n *  padding: ${themeSpacing(1, 2, 1, 4)} // padding: 4px 8px 4px 16px;\r\n *  margin-bottom: ${themeSpacing(3)} // margin-bottom: 12px;\r\n * `\r\n */\r\nexport const themeSpacing = withTheme((theme, ...factors) => {\r\n    const spacing = getValueFromTheme('spacing')({ theme });\r\n    return factors\r\n        .map((factor) => factor && `${factor * spacing}px`)\r\n        .join(' ')\r\n        .trim();\r\n});\r\n/**\r\n * @deprecated Please wrap around the SC styled() method to extend your styles.\r\n */\r\nexport const customCss = (props) => props.css &&\r\n    css `\n    ${props.css}\n  `;\r\n//# sourceMappingURL=themeUtils.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { css, keyframes } from 'styled-components';\nimport { BACKDROP_Z_INDEX } from '../components/shared/constants';\nimport { fromProps } from './fromProps';\n/**\n * Curry function to provide the theme as first parameter, followed up with other parameters\n * @param cb\n *\n * @example\n * const myThemeHelperFunction = withTheme((theme, ...otherParams) => {\n *   ...\n * })\n *\n * css`\n *  ${myThemeHelperFunction(param1, param2)}\n * `\n */\nexport const withTheme = (cb) => (...params) => ({ theme }) => cb(theme, ...params);\n/**\n * A shortcut to the `fromProps` that will get a value out of the props.theme object\n */\nexport const getValueFromTheme = withTheme((theme, identifier, callback) => fromProps(identifier, callback)(theme));\nexport const themeColor = withTheme(\n// eslint-disable-next-line default-param-last\n(theme, colorType, colorSubtype = 'main', override) => {\n    if (override) {\n        return override;\n    }\n    if (colorType) {\n        return getValueFromTheme(`colors.${[colorType]}.${[colorSubtype]}`)({\n            theme,\n        });\n    }\n    return getValueFromTheme('colors.tint.level1')({ theme });\n});\nexport const breakpoint = withTheme((theme, type, variant) => {\n    const breakpointFunc = getValueFromTheme(`breakpoints.${[variant]}`)({\n        theme,\n    });\n    return breakpointFunc && breakpointFunc(type);\n});\nconst generateCSSFromTypography = ({ color, fontWeight, fontSize, letterSpacing, lineHeight, marginBottom, }, gutterBottom) => css `\n  color: ${color};\n  font-weight: ${fontWeight};\n  font-size: ${fontSize};\n  letter-spacing: ${letterSpacing};\n  line-height: ${lineHeight};\n  margin-bottom: ${typeof gutterBottom === 'number'\n    ? `${gutterBottom}px`\n    : marginBottom};\n`;\nexport const getTypographyFromTheme = () => ({ as: asProp = 'p', gutterBottom, styleAs, theme }) => {\n    const as = styleAs || asProp;\n    const styles = getValueFromTheme(`typography.${[as]}`)({\n        theme,\n    });\n    if (!styles) {\n        return '';\n    }\n    const { breakpoints } = styles, otherProps = __rest(styles, [\"breakpoints\"]);\n    return css `\n      ${generateCSSFromTypography(otherProps, gutterBottom)}\n      ${() => breakpoints\n        ? Object.entries(breakpoints).map(([breakpointFromTypography, typoStyles]) => css `\n                @media screen and ${breakpoint('min-width', breakpointFromTypography)} {\n                  ${generateCSSFromTypography(typoStyles || {}, gutterBottom)}\n                }\n              `)\n        : ``}\n    `;\n};\nexport const getTypographyValueFromProperty = withTheme((theme, element, property, breakpointRule) => {\n    const rules = getValueFromTheme(`typography.${[element]}`)({ theme });\n    if (breakpointRule) {\n        if (rules.breakpoints[breakpointRule]) {\n            return rules.breakpoints[breakpointRule][property];\n        }\n        return '';\n    }\n    return rules[property];\n});\n/**\n * When this style is applied on an element it will be hidden but still readable by screen readers.\n *\n * For example:\n * ```ts\n * const OnlyVisibleForScreenReaders = styled.button`${srOnlyStyle}`\n * ```\n */\nexport const srOnlyStyle = css `\n  border-width: 0;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n`;\n/**\n * Fills the elements in an SVG with a color, useful for styling icons.\n *\n * For example, using a theme color:\n * ```jsx\n * const PrimaryCarIcon = styled(CarIcon)`\n *   ${svgFill(themeColor('primary'))}\n * `\n * ```\n *\n * Or by setting the color directly using any color valid in CSS, such as hexadecimal, rgba() and hsla().\n *\n * ```jsx\n * const RedCarIcon = styled(CarIcon)`\n *   ${svgFill('#FF0000')}\n * `\n * ```\n */\nexport const svgFill = withTheme((theme, color) => {\n    const fill = typeof color === 'function' ? color({ theme }) : color;\n    return css `\n    & svg {\n      circle,\n      rect,\n      polygon,\n      path {\n        fill: ${fill};\n      }\n    }\n  `;\n});\n/**\n * Adds an animated background to the element to indicate the content is loading.\n * @param animateLoading Allows toggling the animation effect, if false a fixed color will be used instead.\n */\nexport const perceivedLoading = withTheme((theme, animateLoading = true) => {\n    const animation = keyframes `\n      0% {\n        background-color: ${themeColor('tint', 'level3')({ theme })};\n      }\n\n      50% {\n        background-color: ${themeColor('tint', 'level4')({ theme })};\n      }\n\n      100% {\n        background-color: ${themeColor('tint', 'level3')({ theme })};\n      }\n    `;\n    return animateLoading\n        ? css `\n        animation: ${animation} 2s ease-in-out infinite;\n      `\n        : css `\n        background-color: ${themeColor('tint', 'level4')({ theme })};\n      `;\n});\n/**\n * @deprecated Only used in deprecated component GridItem\n * @param sizes\n * @param propertyName\n * @param theme\n */\nexport const mapToBreakpoints = (sizes, propertyName, theme) => {\n    const breakpointVariants = Object.keys(theme.breakpoints);\n    return css `\n    ${sizes\n        .map((value, index) => index === 0\n        ? `${propertyName}: ${value};`\n        : breakpointVariants[index] &&\n            `\n        @media screen and ${breakpoint('min-width', breakpointVariants[index])({\n                theme,\n            })} {\n          ${propertyName}: ${value};\n        }\n      `)\n        .join('')}\n  `;\n};\nexport const showHide = () => ({ hideAt, showAt, theme }) => {\n    const hideAtCss = hideAt\n        ? css `\n          @media screen and ${breakpoint('min-width', hideAt)({ theme })} {\n            display: none;\n          }\n        `\n        : '';\n    const showAtCss = showAt\n        ? css `\n          @media screen and ${breakpoint('max-width', showAt)({ theme })} {\n            display: none;\n          }\n        `\n        : '';\n    return css `\n      ${showAtCss}\n      ${hideAtCss}\n    `;\n};\n// Function that uses the BACKDROP_Z_INDEX constant to determine the z-index for components rendered with a backdrop\n// The first argument in the curry can be used to raise the z-index for components that need to be displayed above\n// the backdrop, but aren't directly related\nexport const showAboveBackDrop = (show) => ({ hasBackDrop, zIndexOffset, }) => hasBackDrop || show\n    ? css `\n          z-index: ${zIndexOffset\n        ? BACKDROP_Z_INDEX + zIndexOffset + 1\n        : BACKDROP_Z_INDEX + 1};\n        `\n    : '';\n/**\n * Retrieve an amount of pixels by passing a factor that will multiply it by the theme's spacing unit\n *\n * @example If the theme's spacing unit is 4px:\n * css`\n *  padding: ${themeSpacing(1, 2, 1, 4)} // padding: 4px 8px 4px 16px;\n *  margin-bottom: ${themeSpacing(3)} // margin-bottom: 12px;\n * `\n */\nexport const themeSpacing = withTheme((theme, ...factors) => {\n    const spacing = getValueFromTheme('spacing')({ theme });\n    return factors\n        .map((factor) => factor && `${factor * spacing}px`)\n        .join(' ')\n        .trim();\n});\n/**\n * @deprecated Please wrap around the SC styled() method to extend your styles.\n */\nexport const customCss = (props) => props.css &&\n    css `\n    ${props.css}\n  `;\n//# sourceMappingURL=themeUtils.js.map","import styled from 'styled-components';\nimport { themeColor, themeSpacing } from '@amsterdam/asc-ui';\nexport const DescriptionStyle = styled.div `\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground-color: ${themeColor('tint', 'level2')};\n\tpadding: 0 ${themeSpacing(4)};\n\tmargin: ${themeSpacing(2)} 0;\n\twidth: 100%;\n`;\nexport const DescriptionHeadingStyle = styled.h2 `\n\tmargin-bottom: 0;\n`;\nexport const DescriptionListStyle = styled.dl `\n\tmargin: ${themeSpacing(4)} 0;\n`;\nexport const DescriptionListItemStyle = styled.div `\n\t&:not(:last-child) {\n\t\tmargin-bottom: ${themeSpacing(4)};\n\t}\n`;\nexport const DescriptionListTitleStyle = styled.dt `\n\tmargin-bottom: ${themeSpacing(2)};\n\tfont-weight: 400;\n\tfont-size: 16px;\n\tline-height: 18px;\n\tcolor: ${themeColor('tint', 'level7')};\n`;\nexport const DescriptionListValueStyle = styled.dd `\n\tmargin: 0;\n\tfont-weight: 700;\n\tfont-size: 16px;\n\tline-height: 18px;\n\tcolor: ${themeColor('tint', 'level7')};\n`;\nexport const DescriptionFooterStyle = styled.div `\n\tmargin: 0 0 ${themeSpacing(4)} 0;\n`;\n//# sourceMappingURL=DescriptionListStyle.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { DescriptionStyle, DescriptionListStyle, DescriptionListItemStyle, DescriptionListTitleStyle, DescriptionListValueStyle, DescriptionHeadingStyle, DescriptionFooterStyle, } from './DescriptionListStyle';\nconst DescriptionList = (_a) => {\n    var { heading, list, footer } = _a, otherProps = __rest(_a, [\"heading\", \"list\", \"footer\"]);\n    return (_jsxs(DescriptionStyle, Object.assign({ \"data-testid\": \"description\" }, otherProps, { children: [heading && _jsx(DescriptionHeadingStyle, { children: heading }), _jsx(DescriptionListStyle, Object.assign({ \"data-testid\": \"description-list\" }, { children: list.map((item) => (_jsxs(DescriptionListItemStyle, { children: [_jsx(DescriptionListTitleStyle, { children: item.label }), _jsx(DescriptionListValueStyle, { children: item.value })] }, item.label))) })), footer && _jsx(DescriptionFooterStyle, Object.assign({ \"data-testid\": \"description-footer\" }, { children: footer }))] })));\n};\nexport default DescriptionList;\n//# sourceMappingURL=DescriptionList.js.map","import styled, { css } from 'styled-components';\nimport { svgFill } from '../../utils';\nexport const defaultProps = {\n    size: 20,\n    padding: 0,\n    rotate: 0,\n};\nconst IconStyle = styled.span.withConfig({\n    shouldForwardProp: (prop, defaultValidatorFn) => !['size', 'rotate', 'padding', 'inline', 'color'].includes(prop) &&\n        defaultValidatorFn(prop),\n}) `\n  display: ${({ inline }) => (inline ? 'inline-flex' : 'flex')};\n  ${({ iconUrl }) => iconUrl &&\n    css `\n      background-image: url(${iconUrl});\n    `}\n  ${({ size = defaultProps.size, padding = defaultProps.padding }) => css `\n    width: ${size - padding * 2}px;\n    height: ${size - padding * 2}px;\n  `}\n  ${({ padding }) => padding &&\n    css `\n      padding: ${padding}px;\n    `};\n  box-sizing: content-box;\n  ${({ rotate = defaultProps.rotate }) => `transform: rotate(${rotate}deg)`};\n\n  & > svg {\n    ${({ size = defaultProps.size, padding = defaultProps.padding }) => css `\n      width: ${size - padding * 2}px;\n      height: ${size - padding * 2}px;\n    `}\n  }\n\n  ${({ color }) => color && svgFill(color)};\n`;\nexport default IconStyle;\n//# sourceMappingURL=IconStyle.js.map","import IconStyle, { defaultProps } from './IconStyle';\nexport { defaultProps };\nexport default IconStyle;\n//# sourceMappingURL=Icon.js.map","import styled from 'styled-components';\nconst SpinnerStyle = styled.div.withConfig({\n    shouldForwardProp: (prop, defaultValidatorFn) => !['size', 'color'].includes(prop) && defaultValidatorFn(prop),\n}) `\n  @keyframes rotating {\n    0% {\n      transform: rotate(0deg);\n    }\n\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n\n  & svg {\n    animation: rotating 1s linear infinite;\n  }\n`;\nexport default SpinnerStyle;\n//# sourceMappingURL=SpinnerStyle.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Spinner as SpinnerIcon } from '@amsterdam/asc-assets';\nimport Icon from '../Icon/Icon';\nimport SpinnerStyle from './SpinnerStyle';\nfunction Spinner(_a) {\n    var { size, color } = _a, otherProps = __rest(_a, [\"size\", \"color\"]);\n    return (_jsx(SpinnerStyle, Object.assign({ size: size }, otherProps, { children: _jsx(Icon, Object.assign({ size: size, color: color }, { children: _jsx(SpinnerIcon, {}) })) })));\n}\nSpinner.defaultProps = {\n    size: 20,\n};\nexport default Spinner;\n//# sourceMappingURL=Spinner.js.map","import styled from 'styled-components';\nimport { Spinner } from '@amsterdam/asc-ui';\nexport const DocumentViewerStyle = styled.div `\n\tdisplay: flex;\n\tflex-direction: column;\n`;\nexport const SpinnerStyle = styled(Spinner) `\n\tmargin: 0 auto;\n`;\n//# sourceMappingURL=DocumentViewerStyles.js.map","import styled from 'styled-components';\nexport const PDFRendererStyle = styled.object `\n\theight: calc(100vh - 80px);\n\twidth: 100%;\n`;\n//# sourceMappingURL=PDFRendererStyles.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Alert, Link, Paragraph } from '@amsterdam/asc-ui';\nconst DownloadRenderer = ({ uri }) => (_jsxs(Alert, Object.assign({ level: \"warning\", outline: true }, { children: [_jsx(Paragraph, { children: \"Document kan niet weergegeven worden in de browser.\" }), _jsx(Link, Object.assign({ href: uri, icon: \"download\" }, { children: \"Download\" }))] })));\nexport default DownloadRenderer;\n//# sourceMappingURL=DownloadRenderer.js.map","import styled, { css } from 'styled-components';\nimport { getTypographyFromTheme, themeColor } from '../../utils';\nexport const defaultTypographyStyles = {\n    em: css `\n    font-style: italic;\n  `,\n};\nexport default styled.p `\n  ${({ as, forwardedAs }) => {\n    const key = as !== null && as !== void 0 ? as : forwardedAs;\n    return typeof key === 'string' && defaultTypographyStyles[key];\n}}\n  margin: 0;\n  ${getTypographyFromTheme()};\n  font-stretch: normal;\n  letter-spacing: normal;\n  ${({ strong }) => strong &&\n    css `\n      font-weight: 700;\n      color: ${themeColor('tint', 'level7')};\n    `}\n  ${({ color }) => color &&\n    css `\n      color: ${themeColor(color)};\n    `}\n  ${({ fontSize }) => fontSize &&\n    css `\n      font-size: ${fontSize}px;\n    `}\n`;\n//# sourceMappingURL=TypographyStyle.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport TypographyStyle from './TypographyStyle';\nimport { deprecatedWarning } from '../../utils';\nfunction Typography(_a) {\n    var { children } = _a, otherProps = __rest(_a, [\"children\"]);\n    if (otherProps.color) {\n        deprecatedWarning('You are using the deprecated `color` prop in the `Typography` component. Please use your own custom style rules');\n    }\n    return _jsx(TypographyStyle, Object.assign({}, otherProps, { children: children }));\n}\nexport default Typography;\n//# sourceMappingURL=Typography.js.map","import styled, { css } from 'styled-components';\nimport Typography from '../Typography';\nexport const HeaderStyleCSS = css `\n  margin-top: 0;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport default styled(Typography) `\n  ${HeaderStyleCSS}\n`;\n//# sourceMappingURL=HeadingStyle.js.map","import styled from 'styled-components';\nimport { flexboxMinHeightFix } from '../shared/ie-fixes';\nimport { breakpoint, themeColor } from '../../utils';\nimport HeadingStyle from '../Heading/HeadingStyle';\nconst TopBarStyle = styled.header `\n  display: flex;\n  position: relative;\n  align-items: center;\n  padding: 0 10px;\n  background-color: ${({ backgroundColor, theme }) => backgroundColor || themeColor('tint', 'level1')({ theme })};\n  ${flexboxMinHeightFix()};\n\n  @media screen and ${breakpoint('min-width', 'tabletS')} {\n    padding: 0 15px;\n  }\n\n  ${HeadingStyle} {\n    flex-grow: 1;\n    margin-bottom: 0;\n  }\n`;\nexport default TopBarStyle;\n//# sourceMappingURL=TopBarStyle.js.map","import styled from 'styled-components';\nimport TopBarStyle from '../TopBar/TopBarStyle';\nimport { themeColor, showAboveBackDrop } from '../../utils';\nconst ModalStyle = styled.div `\n  background-color: ${themeColor('tint', 'level1')};\n  overflow: auto;\n  width: 100%;\n  max-width: 620px;\n  max-height: 75%;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  pointer-events: all;\n\n  ${TopBarStyle} {\n    min-height: 54px;\n  }\n\n  ${showAboveBackDrop(true)}\n`;\nexport default ModalStyle;\n//# sourceMappingURL=ModalStyle.js.map","var Keys;\n(function (Keys) {\n    // Extend to your needs\n    Keys[\"ArrowUp\"] = \"ArrowUp\";\n    Keys[\"ArrowDown\"] = \"ArrowDown\";\n    Keys[\"ArrowRight\"] = \"ArrowRight\";\n    Keys[\"ArrowLeft\"] = \"ArrowLeft\";\n    Keys[\"Escape\"] = \"Escape\";\n    Keys[\"Enter\"] = \"Enter\";\n    Keys[\"Tab\"] = \"Tab\";\n    Keys[\"Space\"] = \"Space\";\n    Keys[\"Home\"] = \"Home\";\n    Keys[\"End\"] = \"End\";\n})(Keys || (Keys = {}));\nexport default Keys;\n//# sourceMappingURL=KeyboardKeys.js.map","import { position, transparentize } from 'polished';\nimport styled from 'styled-components';\nimport { BACKDROP_Z_INDEX } from '../shared/constants';\nimport { themeColor } from '../../utils';\nconst BackDropStyle = styled.div `\n  display: block;\n  ${position('fixed', 0, 0, 0, 0)};\n  background-color: ${({ backdropOpacity, theme }) => transparentize(backdropOpacity || 0.3, themeColor('tint', 'level7')({ theme }))};\n  z-index: ${({ zIndexOffset }) => zIndexOffset ? BACKDROP_Z_INDEX + zIndexOffset : BACKDROP_Z_INDEX};\n\n  & > * {\n    pointer-events: none;\n  }\n`;\nexport default BackDropStyle;\n//# sourceMappingURL=BackDropStyle.js.map","import styled from 'styled-components';\nimport { Modal, themeSpacing, breakpoint } from '@amsterdam/asc-ui';\nexport const ModalStyle = styled(Modal) `\n\tmax-width: 90%;\n\tmax-height: 90vh;\n\toverflow: visible;\n\n\t&.modal-xs {\n\t\tmax-width: 320px; /* breakpoint phone */\n\t}\n\n\t&.modal-sm {\n\t\tmax-width: 540px; /* breakpoint tabletS */\n\t}\n\n\t&.modal-md {\n\t\tmax-width: 768px; /* breakpoint tabletM */\n\t}\n\n\t&.modal-lg {\n\t\tmax-width: 1024px; /* breakpoint laptop */\n\t}\n\n\t&.modal-xl {\n\t\tmax-width: 1920px; /* breakpoint desktop */\n\t}\n`;\nexport const ModalBlockStyle = styled.div `\n\tdisplay: block;\n\tpadding: 0 ${themeSpacing(3)};\n\tmargin: ${themeSpacing(3)} 0;\n\n\t@media screen and ${breakpoint('min-width', 'tabletM')} {\n\t\tpadding: ${themeSpacing(0)} ${themeSpacing(7)};\n\t\tmargin: ${themeSpacing(7)} 0;\n\t}\n`;\n//# sourceMappingURL=ModalStyles.js.map","import { darken, readableColor, size, transitions } from 'polished';\nimport styled, { css } from 'styled-components';\nimport { svgFill, themeColor, themeSpacing } from '../../utils';\nimport Icon from '../Icon';\nimport { flexboxMinHeightFix } from '../shared/ie-fixes';\nconst defaultProps = {\n    size: 30,\n};\nexport const getButtonHeight = (theme) => themeSpacing(11)({ theme });\nexport const ArrowRight = styled.div `\n  position: relative;\n  top: 0;\n  right: -15px;\n  width: 0;\n  height: 0;\n  border: 22px solid rgba(255, 255, 255, 0);\n  border-left: 15px solid ${themeColor('secondary')};\n  border-right: 0;\n  ${transitions('border-color', '0.1s ease-in-out')}\n`;\nexport const IconLeft = styled(Icon) `\n  margin-right: 10px;\n`;\nexport const IconRight = styled(Icon) `\n  margin-left: 10px;\n`;\nconst getVariant = () => ({ theme, variant, color, }) => {\n    switch (variant) {\n        case 'primary':\n            return css `\n          min-width: 90px;\n          background-color: ${themeColor('primary')};\n          color: ${readableColor(themeColor('primary')({ theme }))};\n          ${svgFill(themeColor('tint', 'level1'))};\n\n          &:focus,\n          &:hover {\n            background-color: ${darken(0.1, themeColor('primary')({ theme }))};\n          }\n        `;\n        case 'secondary':\n            return css `\n          min-width: 90px;\n          background-color: ${themeColor('secondary')};\n          color: ${themeColor('tint', 'level1')};\n          ${svgFill(themeColor('tint', 'level1'))};\n\n          &:focus,\n          &:hover {\n            background-color: ${darken(0.1, themeColor('secondary')({ theme }))};\n          }\n\n          ${(taskflow) => taskflow &&\n                css `\n              &:not(:disabled)&:focus\n                ${ArrowRight},\n                &:not(:disabled)&:hover\n                ${ArrowRight} {\n                border-left-color: ${darken(0.1, themeColor('secondary')({ theme }))};\n              }\n            `}\n        `;\n        case 'tertiary':\n            return css `\n          min-width: 90px;\n          background-color: ${themeColor('tint', 'level4')};\n          ${svgFill(themeColor('tint', 'level7'))};\n\n          &:focus,\n          &:hover {\n            background-color: ${darken(0.1, themeColor('tint', 'level4')({ theme }))};\n          }\n        `;\n        case 'primaryInverted':\n            return css `\n          min-width: 90px;\n          color: ${themeColor('primary')};\n          border: 1px solid ${themeColor('primary')};\n          background-color: ${themeColor('tint', 'level1')};\n          ${svgFill(themeColor('primary', 'main'))};\n\n          &:hover {\n            outline: 1px solid ${themeColor('primary')};\n          }\n        `;\n        case 'textButton':\n            return css `\n          height: auto;\n          padding: 0;\n          align-self: baseline;\n          white-space: normal;\n          text-align: left;\n          color: ${themeColor('primary')};\n          background-color: rgba(0, 0, 0, 0);\n          ${svgFill(themeColor('primary', 'main'))};\n\n          /* remove transition because it's async with Icon */\n          ${transitions('color', '0s')}\n\n          &:hover {\n            color: ${themeColor('secondary')};\n            ${svgFill(themeColor('secondary', 'main'))};\n          }\n\n          ${IconLeft} {\n            margin-right: ${themeSpacing(1)};\n          }\n          ${IconRight} {\n            margin-left: ${themeSpacing(1)};\n          }\n        `;\n        case 'blank':\n            return css `\n          background-color: ${themeColor('tint', 'level1')};\n          ${svgFill(themeColor('tint', 'level7'))};\n          &:hover {\n            background-color: ${themeColor('tint', 'level3')};\n          }\n        `;\n        case 'application':\n            return css `\n          border: 1px solid ${themeColor('tint', 'level7')};\n          background-color: ${themeColor('tint', 'level1')};\n          height: 32px;\n          padding: ${themeSpacing(1, 2)};\n          ${svgFill(themeColor('tint', 'level7'))};\n          &:hover {\n            background-color: ${themeColor('tint', 'level4')};\n          }\n        `;\n        default:\n            // About-to-be-deprecated codeblock to support the 'color' prop\n            return css `\n          color: ${color\n                ? readableColor(themeColor(color)({ theme }))\n                : themeColor('primary')({ theme })};\n          ${color &&\n                css `\n            background: ${themeColor(color)};\n          `}\n\n          ${!color &&\n                css `\n            border: 1px solid ${themeColor('primary')};\n          `}\n\n        &:hover {\n            background: ${color\n                ? themeColor(color, 'dark')({ theme })\n                : themeColor('tint', 'level3')({ theme })};\n            ${!color &&\n                css `\n              outline: 1px solid ${themeColor('primary')};\n            `}\n          }\n        `;\n    }\n};\nconst ButtonStyle = styled.button `\n  height: ${({ theme }) => getButtonHeight(theme)};\n  white-space: nowrap;\n  display: inline-flex;\n  align-items: center;\n  text-decoration: none;\n  border: none;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 20px;\n  padding: ${({ size: sizeProp, theme }) => sizeProp ? '0' : themeSpacing(3, 4)({ theme })};\n  ${({ size: sizeProp, square }) => (sizeProp || square) && // make the button square\n    css `\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      ${size(sizeProp || defaultProps.size)}// width and height\n    `}\n  ${transitions(['color', 'background-color'], '0.1s ease-in-out')}\n  ${getVariant()}\n  ${flexboxMinHeightFix()} // ie fix\n  ${({ taskflow }) => taskflow &&\n    css `\n      position: relative;\n      min-width: initial;\n      padding-right: 0;\n      padding-top: 0; // safari fix\n      padding-bottom: 0; // safari fix\n      line-height: ${({ theme }) => getButtonHeight(theme)}; // safari 10.1 fix\n      z-index: 0;\n      && {\n        margin-right: 25px;\n      }\n      &:focus ${ArrowRight}:after {\n        opacity: 1;\n      }\n    `}\n  ${Icon} {\n    flex-shrink: 0;\n  }\n  &:disabled {\n    cursor: default;\n    outline: none;\n    border: none;\n    color: ${themeColor('tint', 'level4')};\n    background-color: ${themeColor('tint', 'level3')};\n    ${svgFill(themeColor('tint', 'level4'))};\n    text-decoration: none;\n    ${({ taskflow }) => taskflow &&\n    css `\n        ${ArrowRight} {\n          border-left-color: ${themeColor('tint', 'level3')};\n        }\n      `}\n    ${({ variant }) => variant &&\n    variant === 'textButton' &&\n    css `\n        background-color: rgba(0, 0, 0, 0);\n      `}\n  }\n`;\nexport default ButtonStyle;\n//# sourceMappingURL=ButtonStyle.js.map","import styled from 'styled-components';\nimport { themeColor, TopBar, themeSpacing, breakpoint } from '@amsterdam/asc-ui';\nconst ModalTopBarStyle = styled(TopBar) `\n\theight: 64px;\n\tborder-bottom: 2px solid ${themeColor('tint', 'level6')};\n\tpadding: 0 ${themeSpacing(2)} 0 ${themeSpacing(3)};\n\n\t@media screen and ${breakpoint('min-width', 'tabletM')} {\n\t\tpadding: 0 ${themeSpacing(3)} 0 ${themeSpacing(7)};\n\t}\n`;\nexport default ModalTopBarStyle;\n//# sourceMappingURL=ModalTopBarStyles.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Button, Heading, Icon } from '@amsterdam/asc-ui';\nimport { Close } from '@amsterdam/asc-assets';\nimport ModalTopBarStyle from './ModalTopBarStyles';\nconst ModalTopBar = ({ hideCloseButton = false, onCloseButton, children }) => {\n    const renderCloseButton = () => {\n        if (hideCloseButton) {\n            return null;\n        }\n        return (_jsx(Button, Object.assign({ type: \"button\", \"data-testid\": \"modal-close-button\", size: 30, onClick: (evt) => {\n                if (typeof onCloseButton !== 'undefined') {\n                    onCloseButton(evt);\n                }\n            }, variant: \"blank\" }, { children: _jsx(Icon, Object.assign({ size: 20 }, { children: _jsx(Close, {}) })) })));\n    };\n    return (_jsx(ModalTopBarStyle, { children: _jsxs(Heading, Object.assign({ forwardedAs: \"div\", style: { flexGrow: 1 } }, { children: [children, renderCloseButton()] })) }));\n};\nModalTopBar.displayName = 'ModalTopBar';\nexport default ModalTopBar;\n//# sourceMappingURL=ModalTopBar.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport ModalContentStyle from './ModalContentStyles';\nconst ModalContent = ({ children }) => {\n    return _jsx(ModalContentStyle, { children: children });\n};\nModalContent.displayName = 'ModalContent';\nexport default ModalContent;\n//# sourceMappingURL=ModalContent.js.map","import styled, { css } from 'styled-components';\nimport { themeColor, themeSpacing } from '@amsterdam/asc-ui';\nexport const ModalActionsCss = css `\n\tdisplay: flex;\n\tpadding: ${themeSpacing(4)} ${themeSpacing(4)};\n\tborder-top: 2px solid ${themeColor('tint', 'level6')};\n\tbackground-color: ${themeColor('tint', 'level1')};\n\ttext-align: right;\n`;\nexport const ModalActionsStyle = styled.footer `\n\t${ModalActionsCss}\n\tjustify-content: flex-end;\n`;\nexport const ModalActionsSplitStyle = styled.footer `\n\t${ModalActionsCss}\n\tjustify-content: space-between;\n`;\nexport const ModalActionsLeftStyle = styled.div `\n\tdisplay: flex;\n`;\nexport const ModalActionsRightStyle = styled.div `\n\tdisplay: flex;\n`;\n//# sourceMappingURL=ModalActionsStyles.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { ModalActionsStyle, ModalActionsLeftStyle, ModalActionsRightStyle, ModalActionsSplitStyle, } from './ModalActionsStyles';\nconst ModalActions = ({ children }) => {\n    return React.Children.count(children) > 1 ? (_jsx(ModalActionsSplitStyle, Object.assign({ \"data-testid\": \"modal-actions\" }, { children: children }))) : (_jsx(ModalActionsStyle, Object.assign({ \"data-testid\": \"modal-actions\" }, { children: children })));\n};\nconst ModalActionsLeft = ({ children }) => _jsx(ModalActionsLeftStyle, { children: children });\nconst ModalActionsRight = ({ children }) => _jsx(ModalActionsRightStyle, { children: children });\nModalActions.Left = ModalActionsLeft;\nModalActions.Right = ModalActionsRight;\nModalActions.displayName = 'ModalActions';\nexport default ModalActions;\n//# sourceMappingURL=ModalActions.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Heading } from '@amsterdam/asc-ui';\nimport React, { useEffect } from 'react';\nimport { BehaviorSubject } from 'rxjs';\nimport Modal from '../Modal/Modal';\nimport { ModalBlockStyle } from '../Modal/ModalStyles';\nimport { ButtonStyles } from './ConfirmDialogStyles';\nexport const initialState = {\n    message: '',\n    onConfirm: () => { },\n};\nconst subject = new BehaviorSubject(initialState);\nexport const confirm = ({ title = 'Waarschuwing', message = 'Weet u zeker dat u dit item definitief wilt verwijderen?', textConfirmButton = 'Ja', textCancelButton = 'Nee', onConfirm = () => { }, onCancel, }, store = subject) => {\n    store.next({ title, message, textConfirmButton, textCancelButton, onCancel, onConfirm });\n};\nconst ConfirmDialog = ({ size = 'sm', hideCloseButton = true, backdropOpacity = 0.3, zIndexOffset = 1, disablePortal = false, open = false, store = subject, }) => {\n    const [state, setState] = React.useState(initialState);\n    const [isVisible, setIsVisible] = React.useState(open);\n    useEffect(() => {\n        store.subscribe((props) => {\n            setState(Object.assign({}, props));\n            if (props.message.length > 0) {\n                setIsVisible(true);\n            }\n        });\n        return () => {\n            setIsVisible(false);\n            store.next(initialState);\n        };\n    }, []);\n    return (_jsxs(Modal, Object.assign({ id: \"confirm-dialog\", \"data-testid\": \"confirm-dialog\", open: isVisible, size: size, backdropOpacity: backdropOpacity, zIndexOffset: zIndexOffset, disablePortal: disablePortal }, { children: [_jsx(Modal.TopBar, Object.assign({ onCloseButton: () => {\n                    setIsVisible(false);\n                    state.onCancel && state.onCancel();\n                }, hideCloseButton: hideCloseButton }, { children: _jsx(Heading, Object.assign({ forwardedAs: \"h4\" }, { children: state.title })) })), _jsx(Modal.Content, { children: _jsx(ModalBlockStyle, { children: state.message }) }), _jsxs(Modal.Actions, { children: [_jsxs(Modal.Actions.Left, { children: [_jsx(ButtonStyles, Object.assign({ \"data-testid\": \"confirm-button\", variant: \"primary\", style: { marginRight: '8px' }, onClick: () => {\n                                    setIsVisible(false);\n                                    state.onConfirm();\n                                } }, { children: state.textConfirmButton })), _jsx(ButtonStyles, Object.assign({ \"data-testid\": \"cancel-button\", variant: \"primaryInverted\", onClick: () => {\n                                    setIsVisible(false);\n                                    state.onCancel && state.onCancel();\n                                } }, { children: state.textCancelButton }))] }), _jsx(Modal.Actions.Right, { children: \"\\u00A0\" })] })] })));\n};\nexport default ConfirmDialog;\n//# sourceMappingURL=ConfirmDialog.js.map","import styled, { css } from 'styled-components';\nimport { svgFill, themeColor } from '../../utils';\nimport Button from '../Button';\nexport const List = styled.ul `\n  display: flex;\n  align-items: center;\n  flex-wrap: nowrap;\n  list-style: none;\n  padding: 0;\n`;\nexport const ListItem = styled.li `\n  min-width: 54px;\n  display: inline-flex;\n  justify-content: center;\n`;\nconst baseButtonStyles = css `\n  color: ${themeColor('tint', 'level7')};\n\n  &:not(:disabled):hover {\n    color: ${themeColor('secondary', 'main')};\n    text-decoration: underline;\n  }\n\n  ${svgFill(themeColor('tint', 'level7'))}\n`;\nexport const PageNumberStyle = styled.button.attrs({\n    type: 'button',\n}) `\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 22px;\n  min-width: 32px;\n  appearance: none;\n  border: none;\n  background: none;\n  text-align: center;\n  ${baseButtonStyles}\n  ${({ isCurrent }) => isCurrent &&\n    css `\n      background-color: ${themeColor('tint', 'level5')};\n      color: ${themeColor('bright', 'main')};\n      &:not(:disabled):hover {\n        color: ${themeColor('bright', 'main')};\n      }\n    `};\n`;\nexport const PreviousButton = styled(Button) `\n  ${baseButtonStyles}\n`;\nexport const NextButton = styled(Button) `\n  ${baseButtonStyles}\n`;\n//# sourceMappingURL=PaginationStyle.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useMemo, useState } from 'react';\nimport { ChevronLeft, ChevronRight } from '@amsterdam/asc-assets';\nimport { PageNumberStyle, PreviousButton, NextButton, ListItem, List, } from './PaginationStyle';\nconst DEFAULT_PAGINATION_LENGTH = 7;\nfunction Pagination(_a) {\n    var { collectionSize, onPageChange, page = 1, pageSize = 10, paginationLength = DEFAULT_PAGINATION_LENGTH, labelPrevious = 'vorige', labelNext = 'volgende', ariaLabelPrevious = 'Vorige pagina', ariaLabelNext = 'Volgende pagina' } = _a, otherProps = __rest(_a, [\"collectionSize\", \"onPageChange\", \"page\", \"pageSize\", \"paginationLength\", \"labelPrevious\", \"labelNext\", \"ariaLabelPrevious\", \"ariaLabelNext\"]);\n    const [currentPage, setCurrentPage] = useState(page);\n    const totalPages = useMemo(() => Math.ceil(collectionSize / pageSize), [collectionSize, pageSize]);\n    useEffect(() => {\n        if (paginationLength < 5) {\n            // eslint-disable-next-line no-console\n            console.warn('paginationLength prop in Pagination component should be at least 5. If you need a smaller pagination component, please use the CompactPager component. Now falling back to default value');\n        }\n    }, [paginationLength]);\n    // If page prop changes, set currentPage so component can be managed externally\n    useEffect(() => {\n        setCurrentPage(page);\n    }, [page]);\n    /**\n     * This returns an array of the range, including spacers\n     *\n     * @example\n     * currentPage = 4, totalPages = 7\n     * // returns [1, 2, 3, 4, 5, 6, 7]\n     *\n     * @example\n     * currentPage = 5, totalPages = 100\n     * // returns [1, 'firstSpacer', 4, 5, 6, 'lastSpacer', 100]\n     *\n     * @example\n     * currentPage = 97, totalPages = 100\n     * // returns [1, 'firstSpacer', 96, 97, 98, 99, 100]\n     */\n    const range = useMemo(() => {\n        const min = 1;\n        let paginatedLength = paginationLength < 5 ? DEFAULT_PAGINATION_LENGTH : paginationLength;\n        if (paginationLength > totalPages) {\n            paginatedLength = totalPages;\n        }\n        let start = currentPage - Math.floor(paginatedLength / 2);\n        start = Math.max(start, min);\n        start = Math.min(start, min + totalPages - paginatedLength);\n        return Array.from({ length: paginatedLength }, (el, i) => start + i).reduce((acc, pageNr, index) => {\n            if (index === 0 && pageNr !== 1) {\n                return [1, 'firstSpacer'];\n            }\n            if (totalPages > paginatedLength &&\n                index === paginatedLength - 2 &&\n                currentPage < totalPages - 2) {\n                return [...acc, 'lastSpacer', totalPages];\n            }\n            // Skip a number when spacer is already add\n            if ((acc.includes('firstSpacer') && index === 1) ||\n                (acc.includes('lastSpacer') && index === paginatedLength - 1)) {\n                return acc;\n            }\n            return [...acc, pageNr];\n        }, []);\n    }, [currentPage, totalPages, paginationLength]);\n    const onChangePage = (newPage) => {\n        if (onPageChange !== undefined)\n            onPageChange(newPage);\n        setCurrentPage(newPage);\n    };\n    const onPrevious = () => {\n        onChangePage(currentPage - 1);\n    };\n    const onNext = () => {\n        onChangePage(currentPage + 1);\n    };\n    return (_jsx(\"nav\", Object.assign({ \"aria-label\": \"paginering\", role: \"navigation\" }, otherProps, { children: _jsxs(List, { children: [_jsx(ListItem, { children: _jsx(PreviousButton, Object.assign({ type: \"button\", \"aria-label\": ariaLabelPrevious, tabIndex: 0, \"data-testid\": \"previousButton\", onClick: onPrevious, iconLeft: _jsx(ChevronLeft, {}), variant: \"textButton\", disabled: currentPage === 1 }, { children: labelPrevious })) }), range.map((pageNumberOrSpacer) => typeof pageNumberOrSpacer === 'number' ? (_jsx(ListItem, { children: _jsx(PageNumberStyle, Object.assign({ \"aria-label\": pageNumberOrSpacer === currentPage\n                            ? `Pagina ${pageNumberOrSpacer}`\n                            : `Ga naar pagina ${pageNumberOrSpacer}`, \"aria-current\": pageNumberOrSpacer === currentPage, \"data-testid\": `pageButton-${pageNumberOrSpacer}`, onClick: () => onChangePage(pageNumberOrSpacer), isCurrent: pageNumberOrSpacer === currentPage, tabIndex: pageNumberOrSpacer === currentPage ? -1 : 0 }, { children: pageNumberOrSpacer })) }, `pag-${pageNumberOrSpacer}`)) : (_jsx(ListItem, Object.assign({ \"data-testid\": pageNumberOrSpacer }, { children: '\\u2026' }), pageNumberOrSpacer))), _jsx(ListItem, { children: _jsx(NextButton, Object.assign({ type: \"button\", \"aria-label\": ariaLabelNext, tabIndex: 0, \"data-testid\": \"nextButton\", onClick: onNext, iconRight: _jsx(ChevronRight, {}), variant: \"textButton\", disabled: currentPage === totalPages }, { children: labelNext })) })] }) })));\n}\nexport default Pagination;\n//# sourceMappingURL=Pagination.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { themeColor, srOnlyStyle, Pagination, themeSpacing } from '@amsterdam/asc-ui';\nexport const StyledPagination = styled(Pagination) `\n\t&& {\n\t\tpadding-top: ${themeSpacing(1)};\n\t}\n`;\nconst DataGridStyles = styled.div `\n\t.MuiDataGrid-root {\n\t\tborder: none;\n\t\tmargin-bottom: ${themeSpacing(12)};\n\n\t\t.MuiDataGrid-columnHeader {\n\t\t\tpadding: 10px 15px;\n\t\t\tline-height: 22px !important;\n\t\t}\n\n\t\t.MuiDataGrid-columnHeaderTitleContainer {\n\t\t\tpadding: 0;\n\t\t}\n\n\t\t.MuiDataGrid-columnHeaderTitle {\n\t\t\tfont-weight: 700;\n\t\t}\n\n\t\t.MuiDataGrid-columnSeparator {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t.MuiDataGrid-row,\n\t\t.MuiDataGrid-cell,\n\t\t.MuiDataGrid-renderingZone,\n\t\t.MuiDataGrid-viewport {\n\t\t\tmax-height: none !important;\n\t\t}\n\n\t\t.MuiDataGrid-window {\n\t\t\tposition: relative !important;\n\t\t}\n\n\t\t.MuiDataGrid-cell {\n\t\t\tborder-bottom: none;\n\t\t\twhite-space: normal;\n\t\t\tvertical-align: top;\n\n\t\t\ta {\n\t\t\t\tcolor: ${themeColor('primary', 'main')};\n\n\t\t\t\t&:visited {\n\t\t\t\t\tcolor: ${themeColor('supplement', 'purple')};\n\t\t\t\t}\n\n\t\t\t\t&:hover {\n\t\t\t\t\tcolor: ${themeColor('secondary', 'main')};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t> span[aria-live] {\n\t\t\t\twidth: 100%;\n\t\t\t}\n\t\t}\n\n\t\t.MuiDataGrid-cell,\n\t\t.MuiDataGrid-cell--withRenderer {\n\t\t\talign-items: flex-start;\n\t\t\tline-height: 22px !important;\n\t\t\tpadding: 10px 15px;\n\t\t}\n\n\t\t.MuiDataGrid-columnHeader:focus-within,\n\t\t.MuiDataGrid-cell:focus-within,\n\t\t.MuiDataGrid-columnHeader:focus,\n\t\t.MuiDataGrid-cell:focus {\n\t\t\toutline: none;\n\t\t}\n\n\t\t/* stylelint-disable no-descending-specificity */\n\t\t.MuiDataGrid-row {\n\t\t\t&:nth-child(odd),\n\t\t\t&:nth-child(odd):hover {\n\t\t\t\tbackground-color: ${themeColor('tint', 'level1')};\n\t\t\t}\n\n\t\t\t&:nth-child(even),\n\t\t\t&:nth-child(even):hover {\n\t\t\t\tbackground-color: ${themeColor('tint', 'level2')};\n\t\t\t}\n\t\t}\n\t\t/* stylelint-enable no-descending-specificity */\n\n\t\t.MuiDataGrid-cell.remove button {\n\t\t\tline-height: 22px;\n\t\t}\n\n\t\t.sr-only {\n\t\t\t${srOnlyStyle}\n\t\t}\n\t}\n`;\nexport const StyledDataGrid = (props) => {\n    return (_jsx(DataGridStyles, { children: _jsx(DataGrid, Object.assign({}, props)) }));\n};\n//# sourceMappingURL=DocumentTableStyle.js.map","import { KeyboardKeys } from '../../types';\nfunction useActionOnEscape(callback) {\n    const onKeyDown = (event) => {\n        if (event.key === KeyboardKeys.Escape) {\n            callback();\n        }\n    };\n    return {\n        onKeyDown,\n    };\n}\nexport default useActionOnEscape;\n//# sourceMappingURL=useActionOnEscape.js.map","import styled, { css } from 'styled-components';\nimport { themeColor, themeSpacing } from '../../utils';\nimport { INPUT_SIZE } from '../shared/constants';\nexport const inputCss = css `\n  appearance: none;\n  font-size: 16px;\n  border: solid 1px ${themeColor('tint', 'level5')};\n  border-radius: 0;\n  box-sizing: border-box;\n  line-height: 18px;\n  padding: ${themeSpacing(2)};\n  width: 100%;\n  height: ${INPUT_SIZE}px;\n  ${({ error }) => !error &&\n    css `\n      &:hover {\n        border-color: ${themeColor('tint', 'level6')};\n      }\n    `}\n\n  ${({ error }) => error &&\n    css `\n      border-color: ${themeColor('secondary', 'main')};\n    `}\n`;\nconst InputStyle = styled.input `\n  ${inputCss}\n`;\nexport default InputStyle;\n//# sourceMappingURL=InputStyle.js.map","export const HEADER_HEIGHT_SMALL = 50;\nexport const HEADER_HEIGHT_TALL = 158;\nexport const BACKDROP_Z_INDEX = 20;\nexport const TOGGLE_BUTTON_SIZE = 50;\nexport const INPUT_SIZE = 44;\nexport const BUTTON_SIZE = INPUT_SIZE;\nexport const SEARCH_BAR_HEIGHT = 36;\nexport const weekDays = ['ma', 'di', 'woe', 'do', 'vrij', 'za', 'zo'];\nexport const months = [\n    'januari',\n    'februari',\n    'maart',\n    'april',\n    'mei',\n    'juni',\n    'juli',\n    'augustus',\n    'september',\n    'oktober',\n    'november',\n    'december',\n];\nexport const daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n//# sourceMappingURL=constants.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef, useImperativeHandle, useRef } from 'react';\nimport useActionOnEscape from '../../utils/hooks/useActionOnEscape';\nimport InputContext from './InputMethodsContext';\nimport InputStyle from './InputStyle';\nconst Input = forwardRef((_a, externalRef) => {\n    var { blurOnEscape, value, error } = _a, props = __rest(_a, [\"blurOnEscape\", \"value\", \"error\"]);\n    const { onKeyDown } = props;\n    const inputRef = useRef(null);\n    useImperativeHandle(externalRef, () => inputRef.current);\n    const { onKeyDown: onKeyDownHook } = useActionOnEscape(() => {\n        if (inputRef.current) {\n            inputRef.current.blur();\n        }\n    });\n    const handleOnKeyDown = (e, context) => {\n        if (onKeyDown) {\n            onKeyDown(e);\n        }\n        if (blurOnEscape) {\n            onKeyDownHook(e);\n        }\n        if (context.onKeyDown) {\n            context.onKeyDown(e);\n        }\n    };\n    return (_jsx(InputContext.Consumer, { children: (context) => {\n            if (context.setInputRef) {\n                context.setInputRef(inputRef);\n            }\n            return (_jsx(InputStyle, Object.assign({ ref: inputRef }, props, context, { onKeyDown: (e) => {\n                    handleOnKeyDown(e, context);\n                }, error: error, value: value })));\n        } }));\n});\nexport default Input;\n//# sourceMappingURL=Input.js.map","import styled from 'styled-components';\nimport { Input, themeColor } from '@amsterdam/asc-ui';\nimport CancelIcon from '@mui/icons-material/Cancel';\nexport const CancelIconStyle = styled(CancelIcon) `\n\t&& {\n\t\tposition: absolute;\n\t\tright: 4px;\n\t\ttop: 6px;\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tcursor: pointer;\n\t}\n`;\n// I wasn't able to figure out howto type this in set time-box ¯\\_(ツ)_/¯\nexport const InputStyle = styled(Input) `\n\t&& {\n\t\tborder: 1px solid ${themeColor('tint', 'level5')};\n\t\theight: 32px;\n\t\tpadding: 0 26px 0 4px;\n\t}\n`;\nexport default styled.div `\n\tposition: relative;\n`;\n//# sourceMappingURL=ColumnFilterStyle.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useEffect } from 'react';\nimport ColumnFilterStyle, { InputStyle, CancelIconStyle } from './ColumnFilterStyle';\nconst ColumnFilter = (_a) => {\n    var _b;\n    var { params, onFilter, onClear } = _a, props = __rest(_a, [\"params\", \"onFilter\", \"onClear\"]);\n    const { field } = params;\n    const [value, setValue] = React.useState((_b = props === null || props === void 0 ? void 0 : props.value) !== null && _b !== void 0 ? _b : '');\n    const handleOnKeyUp = (evt) => {\n        const input = evt.target;\n        setValue(input.value);\n    };\n    useEffect(() => onFilter(value), [value]);\n    return (_jsxs(ColumnFilterStyle, { children: [_jsx(InputStyle, Object.assign({ name: field, value: value, onKeyUp: handleOnKeyUp, onChange: (evt) => setValue(evt.target.value) }, props, { \"data-testid\": `column-filter-${field}` })), value && (_jsx(CancelIconStyle, { onClick: () => {\n                    setValue('');\n                    onClear();\n                }, \"data-testid\": `column-filter-cancel-${field}` }))] }));\n};\nexport default ColumnFilter;\n//# sourceMappingURL=ColumnFilter.js.map","import styled from 'styled-components';\nimport { breakpoint, Button, themeColor, themeSpacing } from '@amsterdam/asc-ui';\nconst getColor = ({ isDragActive }) => {\n    if (isDragActive) {\n        return themeColor('tint', 'level3');\n    }\n    return themeColor('tint', 'level2');\n};\nexport const FileUploadContainerStyle = styled.div ``;\nexport const FileUploadStyle = styled.div `\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmin-width: 70px;\n\tpadding: ${themeSpacing(8)};\n\tborder-width: 2px;\n\tborder-radius: 2px;\n\tbackground-color: ${(props) => getColor(props)};\n\tborder-color: ${(props) => getColor(props)};\n\tcolor: ${themeColor('tint', 'level7')};\n\ttransition: border 0.24s ease-in-out;\n\toutline: none;\n\tcursor: pointer;\n`;\nexport const FileUploadContentStyle = styled.div `\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\t& > span {\n\t\tmargin-left: ${themeSpacing(2)};\n\t\tpadding-right: 0;\n\t\tmax-width: ${themeSpacing(4)};\n\t}\n`;\nexport const FileUploadPlaceholderStyle = styled.p `\n\tdisplay: none;\n\tmargin: 0;\n\n\t@media screen and ${breakpoint('min-width', 'laptop')} {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n`;\nexport const FileUploadSelectFilesButtonStyle = styled(Button) `\n\ttext-decoration: underline;\n\tfont-weight: 500;\n\n\t@media screen and ${breakpoint('min-width', 'laptop')} {\n\t\tmargin-left: ${themeSpacing(2)};\n\t}\n`;\n//# sourceMappingURL=FileUploadStyles.js.map","import styled from 'styled-components';\nimport { Button, Icon, themeColor, themeSpacing } from '@amsterdam/asc-ui';\nexport const FileListStyle = styled.ul `\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tpadding: 0;\n\tmargin: 0;\n`;\nexport const FileListItemStyle = styled.li `\n\tdisplay: flex;\n\tposition: relative;\n\talign-items: center;\n\tcolor: ${themeColor('tint', 'level7')};\n\tpadding: ${themeSpacing(4)} 0;\n\twidth: 100%;\n\tborder-bottom: 1px solid ${themeColor('tint', 'level5')};\n\n\t&.file-list-item--is-uploading {\n\t\tborder-bottom: none;\n\t}\n`;\nexport const FileIconStyle = styled(Icon) `\n\tmargin-right: ${themeSpacing(1)};\n`;\nexport const FileNameStyle = styled.span `\n\tfont-weight: 700;\n`;\nexport const FileNameErrorStyle = styled.span `\n\tfont-weight: 700;\n\tcolor: ${themeColor('support', 'invalid')};\n`;\nexport const FileRemoveStyle = styled(Button) `\n\tmargin-left: auto;\n`;\nexport const FileCancelStyle = styled(Button) `\n\tmargin-left: auto;\n`;\nexport const FileProgressBarStyle = styled.progress `\n\tposition: absolute;\n\tbottom: 0;\n\tleft: 0;\n\theight: ${themeSpacing(0.5)};\n\twidth: 100%;\n\n\t&[value] {\n\t\tappearance: none;\n\n\t\t::-webkit-progress-bar {\n\t\t\theight: ${themeSpacing(0.5)};\n\t\t\tbackground-color: ${themeColor('tint', 'level2')};\n\t\t}\n\n\t\t::-webkit-progress-value {\n\t\t\tbackground-color: ${themeColor('tint', 'level4')};\n\t\t}\n\t\n\t\t::-moz-progress-bar {\n\t\t\theight: ${themeSpacing(0.5)};\n\t\t\tbackground-color: ${themeColor('tint', 'level4')};\n\t\t}\n\t}\n`;\n//# sourceMappingURL=FileListStyles.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useDropzone } from 'react-dropzone';\nimport { Icon } from '@amsterdam/asc-ui';\nimport { Download } from '@amsterdam/asc-assets';\nimport useDetectTouchscreen from '@amsterdam/asc-ui/lib/utils/hooks/useDetectTouchScreen';\nimport { FileUploadStyle, FileUploadContentStyle, FileUploadPlaceholderStyle, FileUploadSelectFilesButtonStyle, FileUploadContainerStyle, } from './FileUploadStyles';\nimport { useFileUpload } from './hooks';\nimport FileList from './FileList/FileList';\nconst FileUpload = (_a) => {\n    var { getPostUrl, getHeaders, droppingLabel, placeholder, removeLabel, cancelLabel, selectFilesLabel, fileUploadErrorLabel, fileUploadInProgressLabel, onFileRemove, onFileSuccess, removeCompletedFromList, options, storedFiles = [], httpMethod = 'POST' } = _a, otherProps = __rest(_a, [\"getPostUrl\", \"getHeaders\", \"droppingLabel\", \"placeholder\", \"removeLabel\", \"cancelLabel\", \"selectFilesLabel\", \"fileUploadErrorLabel\", \"fileUploadInProgressLabel\", \"onFileRemove\", \"onFileSuccess\", \"removeCompletedFromList\", \"options\", \"storedFiles\", \"httpMethod\"]);\n    const isTouchScreen = useDetectTouchscreen();\n    const { files, handleOnDrop, handleOnCancel, handleOnFileRemove } = useFileUpload(getPostUrl, getHeaders, httpMethod, storedFiles, Math.max(...[...(storedFiles.length ? storedFiles.map((file) => file.tmpId) : [0])]), onFileSuccess);\n    const { open, getRootProps, getInputProps, isDragActive, draggedFiles } = useDropzone(Object.assign(Object.assign({}, options), { onDrop: handleOnDrop, noDrag: isTouchScreen }));\n    return (_jsxs(FileUploadContainerStyle, Object.assign({}, otherProps, { children: [_jsxs(FileUploadStyle, Object.assign({ \"data-testid\": \"file-upload\" }, getRootProps({ isDragActive }), { children: [_jsx(\"input\", Object.assign({ \"data-testid\": \"file-upload__input\" }, getInputProps())), _jsx(FileUploadContentStyle, { children: isDragActive ? (_jsxs(FileUploadPlaceholderStyle, { children: [draggedFiles.length, \" \", droppingLabel] })) : (_jsxs(_Fragment, { children: [_jsx(FileUploadPlaceholderStyle, { children: placeholder }), _jsx(FileUploadSelectFilesButtonStyle, Object.assign({ variant: \"textButton\", onClick: open, type: \"button\" }, { children: selectFilesLabel })), _jsx(Icon, Object.assign({ size: 16, color: \"#004799\" }, { children: _jsx(Download, {}) }))] })) })] })), (files === null || files === void 0 ? void 0 : files.length) > 0 && (_jsx(FileList, { files: removeCompletedFromList\n                    ? files.filter((file) => file.progress !== 100 || (file === null || file === void 0 ? void 0 : file.uploadXhrError) === true)\n                    : files, removeLabel: removeLabel, cancelLabel: cancelLabel, onCancel: handleOnCancel, onFileRemove: (file) => {\n                    handleOnFileRemove(file);\n                    // Let application track file removal\n                    onFileRemove && onFileRemove(file);\n                }, fileUploadErrorLabel: fileUploadErrorLabel, fileUploadInProgressLabel: fileUploadInProgressLabel }))] })));\n};\nexport default FileUpload;\n//# sourceMappingURL=FileUpload.js.map","import styled, { css } from 'styled-components';\nimport { svgFill, themeColor } from '../../utils';\nimport { IconStyle } from '../Icon';\nexport default styled.input.attrs({\n    type: 'checkbox',\n}) `\n  cursor: inherit;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  left: 6px;\n  top: 6px;\n`;\nconst CheckboxIconStyle = styled(IconStyle) `\n  display: flex;\n  border-width: 1px;\n  border-style: solid;\n  width: 22px;\n  height: 22px;\n  position: relative;\n  justify-content: center;\n  align-items: center;\n  z-index: 1;\n  background-color: ${themeColor('tint', 'level1')};\n  transition: background-color 0.2s ease-in-out;\n  pointer-events: none;\n  ${({ checked, indeterminate }) => (checked || indeterminate) &&\n    css `\n      color: ${themeColor('tint', 'level7')};\n      background-color: ${themeColor('tint', 'level7')};\n      ${svgFill(themeColor('tint', 'level1'))};\n    `};\n`;\nconst CheckboxWrapperStyle = styled.span `\n  position: relative;\n  display: inline-flex;\n  user-select: none;\n  vertical-align: middle;\n  margin-bottom: 1px;\n  padding: 6px;\n  flex-shrink: 0; /* IE11 fix */\n  color: ${themeColor('tint', 'level5')};\n  ${({ disabled }) => disabled &&\n    css `\n      pointer-events: none;\n    `}\n  ${({ checked, disabled }) => !checked &&\n    !disabled && // IE11 fix. If an element is disabled, you can still hover on it on IE11.\n    css `\n      &:hover {\n        color: ${themeColor('tint', 'level7')};\n\n        ${CheckboxIconStyle} {\n          outline-style: solid;\n          outline-width: 1px;\n        }\n      }\n    `}\n    ${({ error, checked, disabled }) => error &&\n    !checked &&\n    !disabled &&\n    css `\n      ${CheckboxIconStyle} {\n        border-color: red;\n        outline: 1px solid red;\n      }\n    `}\n`;\nexport { CheckboxWrapperStyle, CheckboxIconStyle };\n//# sourceMappingURL=CheckboxStyle.js.map","import styled, { css } from 'styled-components';\nimport { srOnlyStyle, themeColor } from '../../utils';\nimport { CheckboxWrapperStyle } from '../Checkbox';\nconst LabelStyle = styled.label `\n  display: inline-flex;\n  align-items: ${({ align }) => align};\n  vertical-align: middle;\n  color: ${themeColor('tint', 'level7')};\n  ${({ srOnly }) => srOnly && srOnlyStyle}\n  ${({ disabled }) => disabled\n    ? css `\n          opacity: 0.3;\n        `\n    : css `\n          cursor: pointer;\n        `}\n  ${({ position }) => (position === 'top' || position === 'bottom') &&\n    css `\n      flex-direction: column;\n    `}\n  ${({ position }) => position &&\n    css `\n      & ${CheckboxWrapperStyle} {\n        padding-${position}: 12px;\n      }\n    `}\n  \n  ${({ active }) => active &&\n    css `\n      font-weight: 700;\n    `}\n`;\nLabelStyle.defaultProps = {\n    position: 'right',\n    align: 'center',\n};\nexport const LabelTextStyle = styled.span `\n  ${({ position }) => position !== 'top' &&\n    position !== 'bottom' &&\n    css `\n      margin: 9.2px 0; /* To align the label to a checkbox / radiobutton when having a long text. line-height is 1.15 / 18.4px (from normalize css). Margin top & bottom = lineheight / 2 */\n    `}\n  ${({ position }) => position === 'top' || position === 'left'\n    ? css `\n          order: 0;\n        `\n    : css `\n          order: 1;\n        `}\n`;\nexport default LabelStyle;\n//# sourceMappingURL=LabelStyle.js.map","import { ascDefaultTheme, themeColor as themeColorAsc, themeSpacing as themeSpacingAsc, } from '@amsterdam/asc-ui';\nimport styled from 'styled-components';\n// Proxy to add the used theme\nconst themeColor = (type, colorSubtype, override) => themeColorAsc(type, colorSubtype, override)({ theme: ascDefaultTheme });\n// Proxy to add the used theme\nconst themeSpacing = (top, right, bottom, left) => themeSpacingAsc(top, right, bottom, left)({ theme: ascDefaultTheme });\nexport const DropdownIndicatorStyle = styled.span `\n\tborder-right: 3px solid;\n\tborder-bottom: 3px solid;\n\theight: 11px;\n\twidth: 11px;\n\ttransform: rotate(45deg) translateY(-4px);\n\tborder-color: inherit;\n`;\n// @see https://designsystem.amsterdam.nl/7awj1hc9f/p/6561a5-selection-dropdown\n// @see https://react-select.com/provided\n// @see https://github.com/Amsterdam/amsterdam-styled-components/blob/main/packages/asc-ui/src/components/Select/SelectStyle.ts\nexport function getSelectStyle({ error = false, zIndexMenu }) {\n    return {\n        control: (provided, { isFocused, isDisabled }) => (Object.assign(Object.assign({}, provided), { pointerEvents: isDisabled ? 'none' : 'auto', borderWidth: '2px', borderColor: `${isDisabled\n                ? themeColor('tint', 'level4')\n                : error\n                    ? themeColor('support', 'invalid')\n                    : themeColor('primary')}`, backgroundColor: `${themeColor('tint', 'level1')}`, borderRadius: 0, boxShadow: `${isDisabled ? 'none' : isFocused ? `inset 0 0 0 1px ${themeColor('primary')}` : 'none'}`, '&:hover': {\n                boxShadow: error\n                    ? `inset 0 0 0 1px ${themeColor('support', 'invalid')}`\n                    : `inset 0 0 0 1px ${themeColor('primary')}`,\n            }, color: `${isDisabled\n                ? themeColor('tint', 'level5')\n                : isFocused\n                    ? themeColor('primary', 'dark')\n                    : themeColor('primary')}`, height: '48px' })),\n        menuList: (provided) => (Object.assign(Object.assign({}, provided), { padding: '0', maxHeight: `calc( 8 * 48px})` /* 8 is the max number of options to show before adding a scrollbar */ })),\n        valueContainer: (provided, { isDisabled }) => (Object.assign(Object.assign({}, provided), { color: `${isDisabled ? themeColor('tint', 'level4') : themeColor('primary')}`, padding: `${themeSpacing(0, 3)}`, fontSize: '18px' })),\n        dropdownIndicator: (provided, { isFocused, isDisabled }) => (Object.assign(Object.assign({}, provided), { color: `${isDisabled\n                ? themeColor('tint', 'level3')\n                : isFocused\n                    ? themeColor('primary', 'dark')\n                    : themeColor('primary')}`, '&:hover': {\n                color: `${themeColor('primary', 'dark')}`,\n            } })),\n        indicatorsContainer: (provided) => (Object.assign(Object.assign({}, provided), { paddingRight: `${themeSpacing(3)}`, color: `${themeColor('primary')}` })),\n        indicatorSeparator: () => ({ display: 'none' }),\n        noOptionsMessage: (provided) => (Object.assign(Object.assign({}, provided), { padding: `${themeSpacing(0, 3)}`, height: '48px', fontSize: '18px', backgroundColor: `${themeColor('tint', 'level1')}`, display: 'flex', alignItems: 'center', justifyContent: 'spaceEvenly' })),\n        option: (provided, { isFocused, isDisabled, isSelected }) => (Object.assign(Object.assign({}, provided), { padding: `${themeSpacing(0, 3)}`, justifyContent: 'space-between', display: 'flex', alignItems: 'center', color: isDisabled\n                ? `${themeColor('tint', 'level3')}`\n                : isSelected\n                    ? `${themeColor('tint', 'level1')}`\n                    : isFocused\n                        ? `${themeColor('tint', 'level1')}`\n                        : `${themeColor('primary')}`, height: '48px', fontSize: '18px', backgroundColor: isDisabled\n                ? `${themeColor('tint', 'level1')}`\n                : isSelected\n                    ? `${themeColor('primary')}`\n                    : isFocused\n                        ? `${themeColor('primary')}`\n                        : `${themeColor('tint', 'level1')}`, ':active': {\n                backgroundColor: `${themeColor('primary')}`,\n            }, '::after': {\n                content: isSelected ? '\"\"' : undefined,\n                float: 'right',\n                border: `solid ${themeColor('tint', 'level1')}`,\n                borderWidth: '0 3px 3px 0',\n                transform: 'rotate(45deg) translate(-5px, 0)',\n                width: '10px',\n                height: '18px',\n            } })),\n        singleValue: (provided) => (Object.assign(Object.assign({}, provided), { color: `${themeColor('tint', 'level7')}` })),\n        placeholder: (provided) => (Object.assign(Object.assign({}, provided), { color: `${themeColor('tint', 'level4')}` })),\n        menu: (provided) => (Object.assign(Object.assign({}, provided), { borderRadius: '0', margin: '0', zIndex: zIndexMenu ? zIndexMenu : provided.zIndex, padding: '0 3px 3px 3px', boxShadow: `inset 0 0 0 3px ${themeColor('primary')}` })),\n        menuPortal: (provided) => (zIndexMenu ? Object.assign(Object.assign({}, provided), { zIndex: zIndexMenu }) : provided),\n    };\n}\n//# sourceMappingURL=SelectStyles.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Creatable from 'react-select/creatable';\nimport { getSelectStyle, StyledLabel } from './ReactSelectStyles';\nconst CreatableSelect = (_a) => {\n    var { inputId, label, options, value, error, createLabel = 'Voeg toe' } = _a, props = __rest(_a, [\"inputId\", \"label\", \"options\", \"value\", \"error\", \"createLabel\"]);\n    return (_jsxs(_Fragment, { children: [label && _jsx(StyledLabel, { htmlFor: inputId, label: label }), _jsx(Creatable, Object.assign({ styles: getSelectStyle(Object.assign({ error }, props)), value: value, inputId: inputId, openMenuOnFocus: true, formatCreateLabel: (value) => `${createLabel} \"${value}\"`, options: options }, props))] }));\n};\nexport default CreatableSelect;\n//# sourceMappingURL=CreatableSelect.js.map","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"center\", \"classes\", \"className\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport { keyframes } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Ripple from './Ripple';\nimport touchRippleClasses from './touchRippleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DURATION = 550;\nexport const DELAY_RIPPLE = 80;\nconst enterKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0.3;\n  }\n`));\nconst exitKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n`));\nconst pulsateKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(0.92);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n`));\nexport const TouchRippleRoot = styled('span', {\n  name: 'MuiTouchRipple',\n  slot: 'Root'\n})({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  zIndex: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit'\n}); // This `styled()` function invokes keyframes. `styled-components` only supports keyframes\n// in string templates. Do not convert these styles in JS object as it will break.\n\nexport const TouchRippleRipple = styled(Ripple, {\n  name: 'MuiTouchRipple',\n  slot: 'Ripple'\n})(_t4 || (_t4 = _`\n  opacity: 0;\n  position: absolute;\n\n  &.${0} {\n    opacity: 0.3;\n    transform: scale(1);\n    animation-name: ${0};\n    animation-duration: ${0}ms;\n    animation-timing-function: ${0};\n  }\n\n  &.${0} {\n    animation-duration: ${0}ms;\n  }\n\n  & .${0} {\n    opacity: 1;\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: currentColor;\n  }\n\n  & .${0} {\n    opacity: 0;\n    animation-name: ${0};\n    animation-duration: ${0}ms;\n    animation-timing-function: ${0};\n  }\n\n  & .${0} {\n    position: absolute;\n    /* @noflip */\n    left: 0px;\n    top: 0;\n    animation-name: ${0};\n    animation-duration: 2500ms;\n    animation-timing-function: ${0};\n    animation-iteration-count: infinite;\n    animation-delay: 200ms;\n  }\n`), touchRippleClasses.rippleVisible, enterKeyframe, DURATION, ({\n  theme\n}) => theme.transitions.easing.easeInOut, touchRippleClasses.ripplePulsate, ({\n  theme\n}) => theme.transitions.duration.shorter, touchRippleClasses.child, touchRippleClasses.childLeaving, exitKeyframe, DURATION, ({\n  theme\n}) => theme.transitions.easing.easeInOut, touchRippleClasses.childPulsate, pulsateKeyframe, ({\n  theme\n}) => theme.transitions.easing.easeInOut);\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\n\nconst TouchRipple = /*#__PURE__*/React.forwardRef(function TouchRipple(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTouchRipple'\n  });\n\n  const {\n    center: centerProp = false,\n    classes = {},\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [ripples, setRipples] = React.useState([]);\n  const nextKey = React.useRef(0);\n  const rippleCallback = React.useRef(null);\n  React.useEffect(() => {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]); // Used to filter out mouse emulated events on mobile.\n\n  const ignoringMouseDown = React.useRef(false); // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n\n  const startTimer = React.useRef(null); // This is the hook called once the previous timeout is ready.\n\n  const startTimerCommit = React.useRef(null);\n  const container = React.useRef(null);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(startTimer.current);\n    };\n  }, []);\n  const startCommit = React.useCallback(params => {\n    const {\n      pulsate,\n      rippleX,\n      rippleY,\n      rippleSize,\n      cb\n    } = params;\n    setRipples(oldRipples => [...oldRipples, /*#__PURE__*/_jsx(TouchRippleRipple, {\n      classes: {\n        ripple: clsx(classes.ripple, touchRippleClasses.ripple),\n        rippleVisible: clsx(classes.rippleVisible, touchRippleClasses.rippleVisible),\n        ripplePulsate: clsx(classes.ripplePulsate, touchRippleClasses.ripplePulsate),\n        child: clsx(classes.child, touchRippleClasses.child),\n        childLeaving: clsx(classes.childLeaving, touchRippleClasses.childLeaving),\n        childPulsate: clsx(classes.childPulsate, touchRippleClasses.childPulsate)\n      },\n      timeout: DURATION,\n      pulsate: pulsate,\n      rippleX: rippleX,\n      rippleY: rippleY,\n      rippleSize: rippleSize\n    }, nextKey.current)]);\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  const start = React.useCallback((event = {}, options = {}, cb = () => {}) => {\n    const {\n      pulsate = false,\n      center = centerProp || options.pulsate,\n      fakeElement = false // For test purposes\n\n    } = options;\n\n    if ((event == null ? void 0 : event.type) === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n\n    if ((event == null ? void 0 : event.type) === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n\n    const element = fakeElement ? null : container.current;\n    const rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    }; // Get the size of the ripple\n\n    let rippleX;\n    let rippleY;\n    let rippleSize;\n\n    if (center || event === undefined || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      const {\n        clientX,\n        clientY\n      } = event.touches && event.touches.length > 0 ? event.touches[0] : event;\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n\n    if (center) {\n      rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3); // For some reason the animation is broken on Mobile Chrome if the size is even.\n\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      const sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      const sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);\n    } // Touche devices\n\n\n    if (event != null && event.touches) {\n      // check that this isn't another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = () => {\n          startCommit({\n            pulsate,\n            rippleX,\n            rippleY,\n            rippleSize,\n            cb\n          });\n        }; // Delay the execution of the ripple effect.\n\n\n        startTimer.current = setTimeout(() => {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n      }\n    } else {\n      startCommit({\n        pulsate,\n        rippleX,\n        rippleY,\n        rippleSize,\n        cb\n      });\n    }\n  }, [centerProp, startCommit]);\n  const pulsate = React.useCallback(() => {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  const stop = React.useCallback((event, cb) => {\n    clearTimeout(startTimer.current); // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n\n    if ((event == null ? void 0 : event.type) === 'touchend' && startTimerCommit.current) {\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(() => {\n        stop(event, cb);\n      });\n      return;\n    }\n\n    startTimerCommit.current = null;\n    setRipples(oldRipples => {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n  React.useImperativeHandle(ref, () => ({\n    pulsate,\n    start,\n    stop\n  }), [pulsate, start, stop]);\n  return /*#__PURE__*/_jsx(TouchRippleRoot, _extends({\n    className: clsx(touchRippleClasses.root, classes.root, className),\n    ref: container\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionGroup, {\n      component: null,\n      exit: true,\n      children: ripples\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TouchRipple.propTypes = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default TouchRipple;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reportTypeError = exports.checkDataTypes = exports.checkDataType = exports.coerceAndCheckDataType = exports.getJSONTypes = exports.getSchemaTypes = exports.DataType = void 0;\nconst rules_1 = require(\"../rules\");\nconst applicability_1 = require(\"./applicability\");\nconst errors_1 = require(\"../errors\");\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nvar DataType;\n(function (DataType) {\n    DataType[DataType[\"Correct\"] = 0] = \"Correct\";\n    DataType[DataType[\"Wrong\"] = 1] = \"Wrong\";\n})(DataType = exports.DataType || (exports.DataType = {}));\nfunction getSchemaTypes(schema) {\n    const types = getJSONTypes(schema.type);\n    const hasNull = types.includes(\"null\");\n    if (hasNull) {\n        if (schema.nullable === false)\n            throw new Error(\"type: null contradicts nullable: false\");\n    }\n    else {\n        if (!types.length && schema.nullable !== undefined) {\n            throw new Error('\"nullable\" cannot be used without \"type\"');\n        }\n        if (schema.nullable === true)\n            types.push(\"null\");\n    }\n    return types;\n}\nexports.getSchemaTypes = getSchemaTypes;\nfunction getJSONTypes(ts) {\n    const types = Array.isArray(ts) ? ts : ts ? [ts] : [];\n    if (types.every(rules_1.isJSONType))\n        return types;\n    throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"));\n}\nexports.getJSONTypes = getJSONTypes;\nfunction coerceAndCheckDataType(it, types) {\n    const { gen, data, opts } = it;\n    const coerceTo = coerceToTypes(types, opts.coerceTypes);\n    const checkTypes = types.length > 0 &&\n        !(coerceTo.length === 0 && types.length === 1 && (0, applicability_1.schemaHasRulesForType)(it, types[0]));\n    if (checkTypes) {\n        const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong);\n        gen.if(wrongType, () => {\n            if (coerceTo.length)\n                coerceData(it, types, coerceTo);\n            else\n                reportTypeError(it);\n        });\n    }\n    return checkTypes;\n}\nexports.coerceAndCheckDataType = coerceAndCheckDataType;\nconst COERCIBLE = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"]);\nfunction coerceToTypes(types, coerceTypes) {\n    return coerceTypes\n        ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n        : [];\n}\nfunction coerceData(it, types, coerceTo) {\n    const { gen, data, opts } = it;\n    const dataType = gen.let(\"dataType\", (0, codegen_1._) `typeof ${data}`);\n    const coerced = gen.let(\"coerced\", (0, codegen_1._) `undefined`);\n    if (opts.coerceTypes === \"array\") {\n        gen.if((0, codegen_1._) `${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () => gen\n            .assign(data, (0, codegen_1._) `${data}[0]`)\n            .assign(dataType, (0, codegen_1._) `typeof ${data}`)\n            .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data)));\n    }\n    gen.if((0, codegen_1._) `${coerced} !== undefined`);\n    for (const t of coerceTo) {\n        if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n            coerceSpecificType(t);\n        }\n    }\n    gen.else();\n    reportTypeError(it);\n    gen.endIf();\n    gen.if((0, codegen_1._) `${coerced} !== undefined`, () => {\n        gen.assign(data, coerced);\n        assignParentData(it, coerced);\n    });\n    function coerceSpecificType(t) {\n        switch (t) {\n            case \"string\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n                    .assign(coerced, (0, codegen_1._) `\"\" + ${data}`)\n                    .elseIf((0, codegen_1._) `${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `\"\"`);\n                return;\n            case \"number\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"integer\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"boolean\":\n                gen\n                    .elseIf((0, codegen_1._) `${data} === \"false\" || ${data} === 0 || ${data} === null`)\n                    .assign(coerced, false)\n                    .elseIf((0, codegen_1._) `${data} === \"true\" || ${data} === 1`)\n                    .assign(coerced, true);\n                return;\n            case \"null\":\n                gen.elseIf((0, codegen_1._) `${data} === \"\" || ${data} === 0 || ${data} === false`);\n                gen.assign(coerced, null);\n                return;\n            case \"array\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `[${data}]`);\n        }\n    }\n}\nfunction assignParentData({ gen, parentData, parentDataProperty }, expr) {\n    // TODO use gen.property\n    gen.if((0, codegen_1._) `${parentData} !== undefined`, () => gen.assign((0, codegen_1._) `${parentData}[${parentDataProperty}]`, expr));\n}\nfunction checkDataType(dataType, data, strictNums, correct = DataType.Correct) {\n    const EQ = correct === DataType.Correct ? codegen_1.operators.EQ : codegen_1.operators.NEQ;\n    let cond;\n    switch (dataType) {\n        case \"null\":\n            return (0, codegen_1._) `${data} ${EQ} null`;\n        case \"array\":\n            cond = (0, codegen_1._) `Array.isArray(${data})`;\n            break;\n        case \"object\":\n            cond = (0, codegen_1._) `${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`;\n            break;\n        case \"integer\":\n            cond = numCond((0, codegen_1._) `!(${data} % 1) && !isNaN(${data})`);\n            break;\n        case \"number\":\n            cond = numCond();\n            break;\n        default:\n            return (0, codegen_1._) `typeof ${data} ${EQ} ${dataType}`;\n    }\n    return correct === DataType.Correct ? cond : (0, codegen_1.not)(cond);\n    function numCond(_cond = codegen_1.nil) {\n        return (0, codegen_1.and)((0, codegen_1._) `typeof ${data} == \"number\"`, _cond, strictNums ? (0, codegen_1._) `isFinite(${data})` : codegen_1.nil);\n    }\n}\nexports.checkDataType = checkDataType;\nfunction checkDataTypes(dataTypes, data, strictNums, correct) {\n    if (dataTypes.length === 1) {\n        return checkDataType(dataTypes[0], data, strictNums, correct);\n    }\n    let cond;\n    const types = (0, util_1.toHash)(dataTypes);\n    if (types.array && types.object) {\n        const notObj = (0, codegen_1._) `typeof ${data} != \"object\"`;\n        cond = types.null ? notObj : (0, codegen_1._) `!${data} || ${notObj}`;\n        delete types.null;\n        delete types.array;\n        delete types.object;\n    }\n    else {\n        cond = codegen_1.nil;\n    }\n    if (types.number)\n        delete types.integer;\n    for (const t in types)\n        cond = (0, codegen_1.and)(cond, checkDataType(t, data, strictNums, correct));\n    return cond;\n}\nexports.checkDataTypes = checkDataTypes;\nconst typeError = {\n    message: ({ schema }) => `must be ${schema}`,\n    params: ({ schema, schemaValue }) => typeof schema == \"string\" ? (0, codegen_1._) `{type: ${schema}}` : (0, codegen_1._) `{type: ${schemaValue}}`,\n};\nfunction reportTypeError(it) {\n    const cxt = getTypeErrorContext(it);\n    (0, errors_1.reportError)(cxt, typeError);\n}\nexports.reportTypeError = reportTypeError;\nfunction getTypeErrorContext(it) {\n    const { gen, data, schema } = it;\n    const schemaCode = (0, util_1.schemaRefOrVal)(it, schema, \"type\");\n    return {\n        gen,\n        keyword: \"type\",\n        data,\n        schema: schema.type,\n        schemaCode,\n        schemaValue: schemaCode,\n        parentSchema: schema,\n        params: {},\n        it,\n    };\n}\n//# sourceMappingURL=dataType.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSchemaDeps = exports.validatePropertyDeps = exports.error = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nexports.error = {\n    message: ({ params: { property, depsCount, deps } }) => {\n        const property_ies = depsCount === 1 ? \"property\" : \"properties\";\n        return (0, codegen_1.str) `must have ${property_ies} ${deps} when property ${property} is present`;\n    },\n    params: ({ params: { property, depsCount, deps, missingProperty } }) => (0, codegen_1._) `{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n};\nconst def = {\n    keyword: \"dependencies\",\n    type: \"object\",\n    schemaType: \"object\",\n    error: exports.error,\n    code(cxt) {\n        const [propDeps, schDeps] = splitDependencies(cxt);\n        validatePropertyDeps(cxt, propDeps);\n        validateSchemaDeps(cxt, schDeps);\n    },\n};\nfunction splitDependencies({ schema }) {\n    const propertyDeps = {};\n    const schemaDeps = {};\n    for (const key in schema) {\n        if (key === \"__proto__\")\n            continue;\n        const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps;\n        deps[key] = schema[key];\n    }\n    return [propertyDeps, schemaDeps];\n}\nfunction validatePropertyDeps(cxt, propertyDeps = cxt.schema) {\n    const { gen, data, it } = cxt;\n    if (Object.keys(propertyDeps).length === 0)\n        return;\n    const missing = gen.let(\"missing\");\n    for (const prop in propertyDeps) {\n        const deps = propertyDeps[prop];\n        if (deps.length === 0)\n            continue;\n        const hasProperty = (0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties);\n        cxt.setParams({\n            property: prop,\n            depsCount: deps.length,\n            deps: deps.join(\", \"),\n        });\n        if (it.allErrors) {\n            gen.if(hasProperty, () => {\n                for (const depProp of deps) {\n                    (0, code_1.checkReportMissingProp)(cxt, depProp);\n                }\n            });\n        }\n        else {\n            gen.if((0, codegen_1._) `${hasProperty} && (${(0, code_1.checkMissingProp)(cxt, deps, missing)})`);\n            (0, code_1.reportMissingProp)(cxt, missing);\n            gen.else();\n        }\n    }\n}\nexports.validatePropertyDeps = validatePropertyDeps;\nfunction validateSchemaDeps(cxt, schemaDeps = cxt.schema) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    for (const prop in schemaDeps) {\n        if ((0, util_1.alwaysValidSchema)(it, schemaDeps[prop]))\n            continue;\n        gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties), () => {\n            const schCxt = cxt.subschema({ keyword, schemaProp: prop }, valid);\n            cxt.mergeValidEvaluated(schCxt, valid);\n        }, () => gen.var(valid, true) // TODO var\n        );\n        cxt.ok(valid);\n    }\n}\nexports.validateSchemaDeps = validateSchemaDeps;\nexports.default = def;\n//# sourceMappingURL=dependencies.js.map"],"names":[],"sourceRoot":""}