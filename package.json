{
  "name": "dms-upload",
  "version": "0.0.2-alpha.0",
  "description": "A document upload flow that can be implemented in any BMI React application. Documents are stored in DMS. Metadata can be added in the flow.",
  "main": "dist/index.js",
  "scripts": {
    "prepare": "husky install",
    "start": "npm run storybook",
    "build": "echo \"TODO: build\" && exit 0",
    "build:storybook": "build-storybook",
    "test": "jest",
    "test:watch": "jest --watch",
    "lint": "npm-run-all --parallel lint:js lint:css lint:types",
    "lint:js": "eslint --ignore-path .eslintignore -c .eslintrc.js \"src/**/*.{ts,tsx,js,jsx}\" \"tests/**/*.{ts,tsx,js,jsx}\"",
    "lint:css": "stylelint --config-basedir ./ --ignore-path .stylelintignore --config .stylelintrc.js \"src/**/*.{tsx,ts}\"",
    "lint:types": "tsc --noEmit",
    "fix": "npm-run-all --parallel fix:js fix:css",
    "fix:js": "eslint --fix --ignore-path .eslintignore -c .eslintrc.js \"src/**/*.{ts,tsx,js,jsx}\" \"tests/**/*.{ts,tsx,js,jsx}\"",
    "fix:css": "prettier --write \"src/**/*.{tsx,ts}\"",
    "ci:test": "echo \"TODO: ci:test\" && exit 0",
    "ci:stylelint": "echo \"TODO: ci:stylelint\" && exit 0",
    "ci:eslint": "echo \"TODO: ci:eslint\" && exit 0",
    "storybook": "start-storybook -p 6006",
    "commit": "git-cz",
    "release": "standard-version"
  },
  "repository": {
    "type": "git",
    "url": "git@git.data.amsterdam.nl:bmi/dms-upload.git"
  },
  "keywords": [
    "dms",
    "upload",
    "bmi",
    "asc",
    "react",
    "component",
    "material-ui"
  ],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/cli": "^7.13.14",
    "@babel/core": "^7.13.14",
    "@babel/plugin-proposal-class-properties": "^7.13.0",
    "@babel/plugin-proposal-decorators": "^7.13.5",
    "@babel/plugin-proposal-export-namespace-from": "^7.12.13",
    "@babel/plugin-proposal-function-sent": "^7.12.13",
    "@babel/plugin-proposal-json-strings": "^7.13.8",
    "@babel/plugin-proposal-numeric-separator": "^7.12.13",
    "@babel/plugin-proposal-throw-expressions": "^7.12.13",
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@babel/plugin-syntax-import-meta": "^7.10.4",
    "@babel/plugin-transform-runtime": "^7.13.10",
    "@babel/preset-env": "^7.13.12",
    "@babel/preset-react": "^7.13.13",
    "@babel/preset-typescript": "^7.13.0",
    "@babel/runtime": "^7.14.0",
    "@storybook/addon-actions": "^6.2.9",
    "@storybook/addon-essentials": "^6.2.9",
    "@storybook/addon-links": "^6.2.9",
    "@storybook/react": "^6.2.9",
    "@testing-library/jest-dom": "^5.11.10",
    "@testing-library/react": "^11.2.6",
    "@types/jest": "^26.0.23",
    "@typescript-eslint/eslint-plugin": "^4.22.0",
    "@typescript-eslint/parser": "^4.22.0",
    "babel-jest": "^26.6.3",
    "babel-loader": "^8.2.2",
    "babel-plugin-module-resolver": "^4.1.0",
    "babel-plugin-react-remove-properties": "^0.3.0",
    "babel-plugin-styled-components": "^1.12.0",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-webpack-alias": "^2.1.2",
    "commitizen": "^4.2.4",
    "cz-conventional-changelog": "^3.3.0",
    "eslint": "^7.23.0",
    "eslint-plugin-react": "^7.23.2",
    "husky": "^6.0.0",
    "jest": "^26.6.3",
    "jest-environment-jsdom-sixteen": "^1.0.3",
    "jest-junit": "^12.0.0",
    "jest-styled-components": "^7.0.4",
    "jest-svg-transformer": "^1.0.0",
    "lint-staged": "^10.5.4",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.2.1",
    "standard-version": "^9.3.0",
    "stylelint": "^13.13.1",
    "stylelint-config-recommended": "^5.0.0",
    "stylelint-config-styled-components": "^0.1.1",
    "stylelint-junit-formatter": "^0.2.2",
    "stylelint-processor-styled-components": "^1.10.0",
    "ts-jest": "^26.5.4",
    "typescript": "^4.2.3"
  },
  "dependencies": {
    "@amsterdam/asc-assets": "^0.29.3",
    "@amsterdam/asc-ui": "^0.29.3",
    "@bmi/component-library": "git+ssh://git@git.data.amsterdam.nl:bmi/component-library.git",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "styled-components": "^5.2.3"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "prettier --write --parser \"typescript\" --loglevel error",
      "git add"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  }
}
